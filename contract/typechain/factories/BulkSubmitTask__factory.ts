/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BulkSubmitTask,
  BulkSubmitTaskInterface,
} from "../BulkSubmitTask";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "engine_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "engine",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "input_",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "count_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gas_",
        type: "uint256",
      },
    ],
    name: "submitTaskBulk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "input_",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "count_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gas_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeAmount_",
        type: "uint256",
      },
    ],
    name: "submitTaskBulkWithFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106d93803806106d983398101604081905261002f916100ed565b600080546001600160a01b03199081166001600160a01b038581169182179093556001805490921692841692831790915560405163095ea7b360e01b81526004810191909152600019602482015263095ea7b3906044016020604051808303816000875af11580156100a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c99190610120565b505050610149565b80516001600160a01b03811681146100e857600080fd5b919050565b6000806040838503121561010057600080fd5b610109836100d1565b9150610117602084016100d1565b90509250929050565b60006020828403121561013257600080fd5b8151801515811461014257600080fd5b9392505050565b610581806101586000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80637938c46914610051578063a91d65c514610066578063c9d4623f14610079578063fc0c546a146100a8575b600080fd5b61006461005f36600461035e565b6100bb565b005b6100646100743660046103ef565b610210565b60005461008c906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b60015461008c906001600160a01b031681565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610112573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101369190610476565b5060008989898989896040516024016101549695949392919061049f565b60408051601f198184030181529190526020810180516001600160e01b03166308745dd160e01b179052905060005b84811015610203576000546040516001600160a01b039091169085906101aa9085906104f5565b60006040518083038160008787f1925050503d80600081146101e8576040519150601f19603f3d011682016040523d82523d6000602084013e6101ed565b606091505b50505080806101fb90610524565b915050610183565b5050505050505050505050565b600088888888888860405160240161022d9695949392919061049f565b60408051601f198184030181529190526020810180516001600160e01b03166308745dd160e01b179052905060005b838110156102dc576000546040516001600160a01b039091169084906102839085906104f5565b60006040518083038160008787f1925050503d80600081146102c1576040519150601f19603f3d011682016040523d82523d6000602084013e6102c6565b606091505b50505080806102d490610524565b91505061025c565b50505050505050505050565b803560ff811681146102f957600080fd5b919050565b80356001600160a01b03811681146102f957600080fd5b60008083601f84011261032757600080fd5b50813567ffffffffffffffff81111561033f57600080fd5b60208301915083602082850101111561035757600080fd5b9250929050565b60008060008060008060008060006101008a8c03121561037d57600080fd5b6103868a6102e8565b985061039460208b016102fe565b975060408a0135965060608a0135955060808a013567ffffffffffffffff8111156103be57600080fd5b6103ca8c828d01610315565b9a9d999c50979a9699979860a08801359760c0810135975060e0013595509350505050565b60008060008060008060008060e0898b03121561040b57600080fd5b610414896102e8565b975061042260208a016102fe565b96506040890135955060608901359450608089013567ffffffffffffffff81111561044c57600080fd5b6104588b828c01610315565b999c989b5096999598969760a08701359660c0013595509350505050565b60006020828403121561048857600080fd5b8151801515811461049857600080fd5b9392505050565b60ff8716815260018060a01b038616602082015284604082015283606082015260a060808201528160a0820152818360c0830137600081830160c090810191909152601f909201601f1916010195945050505050565b6000825160005b8181101561051657602081860181015185830152016104fc565b506000920191825250919050565b60006001820161054457634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220e9b62a2fd8bd746a691d0e24e6e7eeca3b44e872b470443a689ef404a14c1d7c64736f6c63430008130033";

type BulkSubmitTaskConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BulkSubmitTaskConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BulkSubmitTask__factory extends ContractFactory {
  constructor(...args: BulkSubmitTaskConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    engine_: string,
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BulkSubmitTask> {
    return super.deploy(
      engine_,
      token_,
      overrides || {}
    ) as Promise<BulkSubmitTask>;
  }
  getDeployTransaction(
    engine_: string,
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(engine_, token_, overrides || {});
  }
  attach(address: string): BulkSubmitTask {
    return super.attach(address) as BulkSubmitTask;
  }
  connect(signer: Signer): BulkSubmitTask__factory {
    return super.connect(signer) as BulkSubmitTask__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BulkSubmitTaskInterface {
    return new utils.Interface(_abi) as BulkSubmitTaskInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BulkSubmitTask {
    return new Contract(address, _abi, signerOrProvider) as BulkSubmitTask;
  }
}
