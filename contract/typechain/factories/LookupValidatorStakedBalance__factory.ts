/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LookupValidatorStakedBalance,
  LookupValidatorStakedBalanceInterface,
} from "../LookupValidatorStakedBalance";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IArbius",
        name: "_arbius",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
    ],
    name: "lookupLookupValidatorStakedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161023438038061023483398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6101a1806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b7c1769614610030575b600080fd5b61004361003e3660046100e3565b610055565b60405190815260200160405180910390f35b60008054604051631f4a58fb60e31b81526001600160a01b0384811660048301528392169063fa52c7d8906024016040805180830381865afa15801561009f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c39190610107565b519392505050565b6001600160a01b03811681146100e057600080fd5b50565b6000602082840312156100f557600080fd5b8135610100816100cb565b9392505050565b60006040828403121561011957600080fd5b6040516040810181811067ffffffffffffffff8211171561014a57634e487b7160e01b600052604160045260246000fd5b60405282518152602083015161015f816100cb565b6020820152939250505056fea26469706673582212200f8d925f7da05129fa01f37ac082d7f04c2d13a6b18e3a50cd51dcbc845f272764736f6c63430008130033";

type LookupValidatorStakedBalanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LookupValidatorStakedBalanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LookupValidatorStakedBalance__factory extends ContractFactory {
  constructor(...args: LookupValidatorStakedBalanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _arbius: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LookupValidatorStakedBalance> {
    return super.deploy(
      _arbius,
      overrides || {}
    ) as Promise<LookupValidatorStakedBalance>;
  }
  getDeployTransaction(
    _arbius: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_arbius, overrides || {});
  }
  attach(address: string): LookupValidatorStakedBalance {
    return super.attach(address) as LookupValidatorStakedBalance;
  }
  connect(signer: Signer): LookupValidatorStakedBalance__factory {
    return super.connect(signer) as LookupValidatorStakedBalance__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LookupValidatorStakedBalanceInterface {
    return new utils.Interface(_abi) as LookupValidatorStakedBalanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LookupValidatorStakedBalance {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LookupValidatorStakedBalance;
  }
}
