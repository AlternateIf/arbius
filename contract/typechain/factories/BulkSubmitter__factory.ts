/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BulkSubmitter, BulkSubmitterInterface } from "../BulkSubmitter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IArbius",
        name: "_arbius",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_arbiusToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_model",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_input",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_solutionCid",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "taskid",
        type: "bytes32",
      },
    ],
    name: "TaskSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32[10]",
        name: "taskids",
        type: "bytes32[10]",
      },
    ],
    name: "bulkSolution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bulkTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620009c2380380620009c28339810160408190526200003491620001ee565b600080546001600160a01b038088166001600160a01b0319928316179092556001805492871692909116919091179055600283905560036200007783826200031c565b5060056200008682826200031c565b5060015460005460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620000de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001049190620003e8565b50505050505062000413565b6001600160a01b03811681146200012657600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015157600080fd5b81516001600160401b03808211156200016e576200016e62000129565b604051601f8301601f19908116603f0116810190828211818310171562000199576200019962000129565b81604052838152602092508683858801011115620001b657600080fd5b600091505b83821015620001da5785820183015181830184015290820190620001bb565b600093810190920192909252949350505050565b600080600080600060a086880312156200020757600080fd5b8551620002148162000110565b6020870151909550620002278162000110565b6040870151606088015191955093506001600160401b03808211156200024c57600080fd5b6200025a89838a016200013f565b935060808801519150808211156200027157600080fd5b5062000280888289016200013f565b9150509295509295909350565b600181811c90821680620002a257607f821691505b602082108103620002c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031757600081815260208120601f850160051c81016020861015620002f25750805b601f850160051c820191505b818110156200031357828155600101620002fe565b5050505b505050565b81516001600160401b0381111562000338576200033862000129565b62000350816200034984546200028d565b84620002c9565b602080601f8311600181146200038857600084156200036f5750858301515b600019600386901b1c1916600185901b17855562000313565b600085815260208120601f198616915b82811015620003b95788860151825594840194600190910190840162000398565b5085821015620003d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620003fb57600080fd5b815180151581146200040c57600080fd5b9392505050565b61059f80620004236000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632a4f7e1e14610046578063b6b55f2514610050578063fd14f5cc14610063575b600080fd5b61004e610076565b005b61004e61005e366004610337565b610234565b61004e610071366004610350565b61029b565b60005b600a81101561023157600080546002546040516308745dd160e01b81526001600160a01b03909216916308745dd1916100c5918591309167016345785d8a000090600390600401610481565b6020604051808303816000875af11580156100e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010891906104c2565b6000805460405163393cb1c760e01b815292935090916001600160a01b039091169063393cb1c79061014390309086906005906004016104db565b602060405180830381865afa158015610160573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018491906104c2565b60005460405163283753ef60e11b8152600481018390529192506001600160a01b03169063506ea7de90602401600060405180830381600087803b1580156101cb57600080fd5b505af11580156101df573d6000803e3d6000fd5b505050507ff589093a2fe9ec0f499de0d240f315052f89986e3978e21358313545c3331af38260405161021491815260200190565b60405180910390a1505080806102299061050b565b915050610079565b50565b6000546040516324e8243b60e21b8152306004820152602481018390526001600160a01b03909116906393a090ec90604401600060405180830381600087803b15801561028057600080fd5b505af1158015610294573d6000803e3d6000fd5b5050505050565b60005b600a811015610333576000546001600160a01b03166356914caf8383600a81106102ca576102ca610532565b602002015160056040518363ffffffff1660e01b81526004016102ee929190610548565b600060405180830381600087803b15801561030857600080fd5b505af115801561031c573d6000803e3d6000fd5b50505050808061032b9061050b565b91505061029e565b5050565b60006020828403121561034957600080fd5b5035919050565b600061014080838503121561036457600080fd5b83601f84011261037357600080fd5b60405181810181811067ffffffffffffffff821117156103a357634e487b7160e01b600052604160045260246000fd5b6040529083019080858311156103b857600080fd5b845b838110156103d25780358252602091820191016103ba565b509095945050505050565b8054600090600181811c90808316806103f757607f831692505b6020808410820361041857634e487b7160e01b600052602260045260246000fd5b83885260208801828015610433576001811461044957610474565b60ff198716825285151560051b82019750610474565b60008981526020902060005b8781101561046e57815484820152908601908401610455565b83019850505b5050505050505092915050565b60ff8616815260018060a01b038516602082015283604082015282606082015260a0608082015260006104b760a08301846103dd565b979650505050505050565b6000602082840312156104d457600080fd5b5051919050565b60018060a01b038416815282602082015260606040820152600061050260608301846103dd565b95945050505050565b60006001820161052b57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b82815260406020820152600061056160408301846103dd565b94935050505056fea26469706673582212207a53fb9c63c7a6422170d575c9494ad044bb2d0eb5f27a2f3d8fcc3537577a9364736f6c63430008130033";

type BulkSubmitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BulkSubmitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BulkSubmitter__factory extends ContractFactory {
  constructor(...args: BulkSubmitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _arbius: string,
    _arbiusToken: string,
    _model: BytesLike,
    _input: BytesLike,
    _solutionCid: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BulkSubmitter> {
    return super.deploy(
      _arbius,
      _arbiusToken,
      _model,
      _input,
      _solutionCid,
      overrides || {}
    ) as Promise<BulkSubmitter>;
  }
  getDeployTransaction(
    _arbius: string,
    _arbiusToken: string,
    _model: BytesLike,
    _input: BytesLike,
    _solutionCid: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _arbius,
      _arbiusToken,
      _model,
      _input,
      _solutionCid,
      overrides || {}
    );
  }
  attach(address: string): BulkSubmitter {
    return super.attach(address) as BulkSubmitter;
  }
  connect(signer: Signer): BulkSubmitter__factory {
    return super.connect(signer) as BulkSubmitter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BulkSubmitterInterface {
    return new utils.Interface(_abi) as BulkSubmitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BulkSubmitter {
    return new Contract(address, _abi, signerOrProvider) as BulkSubmitter;
  }
}
