/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VeStaking, VeStakingInterface } from "../VeStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_votingEscrow",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "BalanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "_updateBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "_withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingEscrow",
    outputs: [
      {
        internalType: "contract IVotingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080346100ca57601f61135138819003918201601f19168301916001600160401b038311848410176100cf5780849260409485528339810103126100ca57610052602061004b836100e5565b92016100e5565b60008054336001600160a01b0319808316821784556040519590946001600160a01b03949093859391908416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a362093a80600555168360015416176001551690600254161760025561125790816100fa8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100ca5756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816318160ddd14610cfe575080631c1f78eb14610ce15780631c4b774b14610bb65780631dd19cb414610a63578063386a952514610a445780633c6b16ab1461089d5780634d6ed8c41461087d5780634f2bfe5b1461085457806361dc2c361461075d578063715018a6146107125780637b0a47ee146106f557806380faa57d146106d85780638980f11f146105ac5780638da5cb5b146105845780639cc7f7081461055d578063ac6a2b5d1461049e578063c8f33c911461047f578063cc1a378f1461039c578063cd3daf9d14610378578063d0779da814610351578063d1af0c7d14610328578063dad3aab61461025d578063df136d651461023e578063ebe2b12b1461021b578063f2fde38b1461016b5763f301af421461014157600080fd5b346101675760203660031901126101675760209282913581526009845220549051908152f35b8280fd5b503461016757602036600319011261016757610185610d35565b9061018e610d4b565b6001600160a01b039182169283156101c957505082546001600160a01b0319811683178455166000805160206112028339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b50503461023a578160031936011261023a576020906003549051908152f35b5080fd5b50503461023a578160031936011261023a576020906007549051908152f35b50503461023a577ffa03b6304af61f28308225e213bf003207602328c0dad9495c9b2d61eec74f4561028e36610d1a565b6102a660018060a09694961b03600254163314610f24565b6102ae610e1b565b6007556102b9610da3565b60065583610302575b838552600b60205281852054906102e4816102df84600a54610db8565b610e0e565b600a55848652600b602052808387205582519182526020820152a280f35b61030b84610e7b565b8486526009602052828620556007546008602052828620556102c2565b50503461023a578160031936011261023a5760015490516001600160a01b039091168152602090f35b50346101675760203660031901126101675760209282913581526008845220549051908152f35b50503461023a578160031936011261023a57602090610395610e1b565b9051908152f35b509034610167576020366003190112610167578135916103ba610d4b565b6003544211156103f65750816020917ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d39360055551908152a180f35b602060a492519162461bcd60e51b8352820152605860248201527f50726576696f7573207265776172647320706572696f64206d7573742062652060448201527f636f6d706c657465206265666f7265206368616e67696e672074686520647572606482015277185d1a5bdb88199bdc881d1a19481b995dc81c195c9a5bd960421b6084820152fd5b50503461023a578160031936011261023a576020906006549051908152f35b503461016757602080600319360112610559577f0c875c8d391179c5cf7ad8303d268efd50b8beb78b671f85cd54bfb91eb8ef409135926104ea60018060a01b03600254163314610f24565b6104f2610e1b565b6007556104fd610da3565b60065583610535575b838552600b8252808520549061051e82600a54610db8565b600a55848652600b8352858181205551908152a280f35b61053e84610e7b565b84865260098352818620556007546008835281862055610506565b8380fd5b5034610167576020366003190112610167576020928291358152600b845220549051908152f35b50503461023a578160031936011261023a57905490516001600160a01b039091168152602090f35b50346101675781600319360112610167576105c5610d35565b602435916105d1610d4b565b6001546001600160a01b03838116929116821461068b578361060c9260209288885180968195829463a9059cbb60e01b845233908401610f7c565b03925af18015610681579361064d917f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2895610653575b505192839283610f7c565b0390a180f35b6106739060203d811161067a575b61066b8183610eeb565b810190611115565b5038610642565b503d610661565b84513d87823e3d90fd5b608490602086519162461bcd60e51b8352820152602160248201527f43616e6e6f7420776974686472617720746865207265776172647320746f6b656044820152603760f91b6064820152fd5b50503461023a578160031936011261023a57602090610395610da3565b503461016757826003193601126101675760209250549051908152f35b833461075a578060031936011261075a5761072b610d4b565b80546001600160a01b03198116825581906001600160a01b03166000805160206112028339815191528280a380f35b80fd5b5090346101675761076d36610d1a565b91909261078560018060a01b03600254163314610f24565b61078d610e1b565b600755610798610da3565b6006558361082e575b82156107fb5750816020916107d97f925435fa7e37e5d9555bb18ce0d62bb9627d0846942e58e5291e9a2dded462ed94600a54610e0e565b600a55848652600b83528086206107f1838254610e0e565b905551908152a280f35b6020606492519162461bcd60e51b8352820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152fd5b61083784610e7b565b8486526009602052828620556007546008602052828620556107a1565b50503461023a578160031936011261023a5760025490516001600160a01b039091168152602090f35b50913461075a57602036600319011261075a575061039560209235610e7b565b5082903461023a5760209081600319360112610167578035906108be610e1b565b600755600354428111610a13575062093a80806108dd60055442610e0e565b04818102918183041490151715610a00576108ff816024926003554290610db8565b6109098185610dee565b83555b4260065560015487516370a0823160e01b8152308582015292869184919082906001600160a01b03165afa9182156109f65786926109c1575b5061095290835492610dee565b1061098357507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d929351908152a180f35b845162461bcd60e51b815290810183905260186024820152770a0e4deecd2c8cac840e4caeec2e4c840e8dede40d0d2ced60431b6044820152606490fd5b9091508481813d83116109ef575b6109d98183610eeb565b810103126109eb575190610952610945565b8580fd5b503d6109cf565b87513d88823e3d90fd5b634e487b7160e01b855260118252602485fd5b610a206024914290610db8565b610a3d81610a38610a32865483610ddb565b87610e0e565b610dee565b835561090c565b50503461023a578160031936011261023a576020906005549051908152f35b509034610167578260031936011261016757610a7d610d4b565b60035442811115610b3457610a96610a9d914290610db8565b8354610ddb565b91602060018060a01b03600154169160248451809481936370a0823160e01b835230908301525afa918215610b2b57508391610af8575b50610af591610ae291610db8565b60015433906001600160a01b0316610f97565b80f35b90506020813d8211610b23575b81610b1260209383610eeb565b810103126101675751610af5610ad4565b3d9150610b05565b513d85823e3d90fd5b5060015481516370a0823160e01b81523093810193909352602090839060249082906001600160a01b03165afa908115610bad57508290610b7a575b610af59150610ae2565b506020813d8211610ba5575b81610b9360209383610eeb565b8101031261023a57610af59051610b70565b3d9150610b86565b513d84823e3d90fd5b503461016757602080600319360112610559578135610bd3610e1b565b600755610bde610da3565b60065580610cbd575b60025484516331a9108f60e11b81529384018290526001600160a01b03919083908590602490829086165afa938415610cb3578694610c7b575b50855260098252838520928354948686610c385780f35b7fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869555610c6a86838560015416610f97565b519485521692a23880808080808680f35b9093508281813d8311610cac575b610c938183610eeb565b810103126109eb575181811681036109eb579238610c21565b503d610c89565b85513d88823e3d90fd5b610cc681610e7b565b81865260098352848620556007546008835284862055610be7565b50503461023a578160031936011261023a57602090610395610ec9565b84903461023a578160031936011261023a57602090600a548152f35b6040906003190112610d30576004359060243590565b600080fd5b600435906001600160a01b0382168203610d3057565b6000546001600160a01b03163303610d5f57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600354804210600014610db557504290565b90565b91908203918211610dc557565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715610dc557565b8115610df8570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610dc557565b600a548015610e7457600754610e47600454610e41610e38610da3565b60065490610db8565b90610ddb565b670de0b6b3a764000090818102918183041490151715610dc557610db592610e6e91610dee565b90610e0e565b5060075490565b610db59060406000828152600b602052670de0b6b3a7640000610eb883832054610e41610ea6610e1b565b87865260086020528686205490610db8565b049281526009602052205490610e0e565b600354428111610ed95750600090565b610db590610e41600454914290610db8565b601f909101601f19168101906001600160401b03821190821017610f0e57604052565b634e487b7160e01b600052604160045260246000fd5b15610f2b57565b60405162461bcd60e51b815260206004820152602360248201527f43616c6c6572206973206e6f7420566f74696e67457363726f7720636f6e74726044820152621858dd60ea1b6064820152608490fd5b6001600160a01b039091168152602081019190915260400190565b9291909260409081519485610fbf6020958683019363a9059cbb60e01b855260248401610f7c565b0391610fd3601f1993848101895288610eeb565b83516001600160401b03979093916001600160a01b03169084860189811186821017610f0e5786528685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152600080948192519082855af1913d15611102573d9889116110ee578697986110588798611066985193601f8401160183610eeb565b81528093883d92013e61112d565b8051908382159283156110d6575b50505015611080575050565b60849250519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6110e69350820181019101611115565b388381611074565b634e487b7160e01b84526041600452602484fd5b509150611066939495965060609161112d565b90816020910312610d3057518015158103610d305790565b9192901561118f5750815115611141575090565b3b1561114a5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156111a25750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106111e8575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506111c556fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122033428c7bc5a6830d1cb839bca51578590d17c8a025cc84ca4458dcdf188ff65064736f6c63430008130033";

type VeStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VeStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VeStaking__factory extends ContractFactory {
  constructor(...args: VeStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _rewardsToken: string,
    _votingEscrow: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VeStaking> {
    return super.deploy(
      _rewardsToken,
      _votingEscrow,
      overrides || {}
    ) as Promise<VeStaking>;
  }
  getDeployTransaction(
    _rewardsToken: string,
    _votingEscrow: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardsToken,
      _votingEscrow,
      overrides || {}
    );
  }
  attach(address: string): VeStaking {
    return super.attach(address) as VeStaking;
  }
  connect(signer: Signer): VeStaking__factory {
    return super.connect(signer) as VeStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeStakingInterface {
    return new utils.Interface(_abi) as VeStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VeStaking {
    return new Contract(address, _abi, signerOrProvider) as VeStaking;
  }
}
