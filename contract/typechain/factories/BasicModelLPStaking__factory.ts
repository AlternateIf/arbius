/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BasicModelLPStaking,
  BasicModelLPStakingInterface,
} from "../BasicModelLPStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "contract IBasicModelToken",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerSecond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "calculateRewardsEarned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IBasicModelToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161076b38038061076b83398101604081905261002f91610062565b6001600160a01b03928316608052911660a05260c0526100a5565b6001600160a01b038116811461005f57600080fd5b50565b60008060006060848603121561007757600080fd5b83516100828161004a565b60208501519093506100938161004a565b80925050604084015190509250925092565b60805160a05160c05161067b6100f0600039600081816101d9015261042a0152600081816102320152610360015260008181610187015281816102b601526104e1015261067b6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c5780638f10369a116100665780638f10369a146101d457806395d89b41146101fb578063a694fc3a1461021a578063f7c618c11461022d57600080fd5b806370a082311461016257806372f702f3146101825780638b086764146101c157600080fd5b8063013eba92146100d457806306fdde031461010757806318160ddd146101355780632e17de781461013e578063313ce567146101535780634e71d92d1461015a575b600080fd5b6100f46100e2366004610518565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6040805180820190915260098152684c505374616b696e6760b81b60208201525b6040516100fe9190610541565b6100f460015481565b61015161014c36600461058f565b610254565b005b60126100f4565b6100f4610330565b6100f4610170366004610518565b60006020819052908152604090205481565b6101a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100fe565b6100f46101cf366004610518565b6103dc565b6100f47f000000000000000000000000000000000000000000000000000000000000000081565b6040805180820190915260038152624c505360e81b6020820152610128565b61015161022836600461058f565b610479565b6101a97f000000000000000000000000000000000000000000000000000000000000000081565b61025c610330565b50336000908152602081905260408120805483929061027c9084906105be565b92505081905550806001600082825461029591906105be565b909155505060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044015b6020604051808303816000875af1158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c91906105d7565b5050565b60008061033c336103dc565b905080156103c5576040516340c10f1960e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156103ac57600080fd5b505af11580156103c0573d6000803e3d6000fd5b505050505b336000908152600260205260409020429055919050565b6001600160a01b038116600090815260026020526040812054810361040357506000919050565b6001600160a01b0382166000908152602081815260408083205460015460029093529220547f00000000000000000000000000000000000000000000000000000000000000009061045490426105be565b61045e91906105f9565b61046890836105f9565b6104729190610610565b9392505050565b610481610330565b5033600090815260208190526040812080548392906104a1908490610632565b9250508190555080600160008282546104ba9190610632565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016102e9565b60006020828403121561052a57600080fd5b81356001600160a01b038116811461047257600080fd5b600060208083528351808285015260005b8181101561056e57858101830151858201604001528201610552565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156105a157600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156105d1576105d16105a8565b92915050565b6000602082840312156105e957600080fd5b8151801515811461047257600080fd5b80820281158282048414176105d1576105d16105a8565b60008261062d57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156105d1576105d16105a856fea264697066735822122031fbaa34fe3b599b894da8fb82442bbd3c05b26a0086865c7de92e282d431d1664736f6c63430008130033";

type BasicModelLPStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicModelLPStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicModelLPStaking__factory extends ContractFactory {
  constructor(...args: BasicModelLPStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _stakingToken: string,
    _rewardToken: string,
    _rewardPerSecond: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BasicModelLPStaking> {
    return super.deploy(
      _stakingToken,
      _rewardToken,
      _rewardPerSecond,
      overrides || {}
    ) as Promise<BasicModelLPStaking>;
  }
  getDeployTransaction(
    _stakingToken: string,
    _rewardToken: string,
    _rewardPerSecond: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardToken,
      _rewardPerSecond,
      overrides || {}
    );
  }
  attach(address: string): BasicModelLPStaking {
    return super.attach(address) as BasicModelLPStaking;
  }
  connect(signer: Signer): BasicModelLPStaking__factory {
    return super.connect(signer) as BasicModelLPStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicModelLPStakingInterface {
    return new utils.Interface(_abi) as BasicModelLPStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicModelLPStaking {
    return new Contract(address, _abi, signerOrProvider) as BasicModelLPStaking;
  }
}
