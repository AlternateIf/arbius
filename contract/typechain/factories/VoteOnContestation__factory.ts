/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VoteOnContestation,
  VoteOnContestationInterface,
} from "../VoteOnContestation";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IArbius",
        name: "_arbius",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_taskid",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_agree",
        type: "bool",
      },
    ],
    name: "voteOnContestation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60803461007357601f61018238819003918201601f19168301916001600160401b038311848410176100785780849260209460405283398101031261007357516001600160a01b0381169081900361007357600080546001600160a01b03191691909117905560405160f3908161008f8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080806040526004361015601257600080fd5b600090813560e01c631825c20e14602857600080fd5b3460b957604036600319011260b9578160243580151580910360b95781546001600160a01b031690813b1560b55783838193604493630c12e10760e11b8452600435600485015260248401525af1801560aa576082575080f35b67ffffffffffffffff811160965760405280f35b634e487b7160e01b82526041600452602482fd5b6040513d84823e3d90fd5b8280fd5b5080fdfea264697066735822122067f1f7a578c87203456c67b27c03d7deb48105a4f6528de1e891b98bcd41a50c64736f6c63430008130033";

type VoteOnContestationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VoteOnContestationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VoteOnContestation__factory extends ContractFactory {
  constructor(...args: VoteOnContestationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _arbius: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VoteOnContestation> {
    return super.deploy(
      _arbius,
      overrides || {}
    ) as Promise<VoteOnContestation>;
  }
  getDeployTransaction(
    _arbius: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_arbius, overrides || {});
  }
  attach(address: string): VoteOnContestation {
    return super.attach(address) as VoteOnContestation;
  }
  connect(signer: Signer): VoteOnContestation__factory {
    return super.connect(signer) as VoteOnContestation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoteOnContestationInterface {
    return new utils.Interface(_abi) as VoteOnContestationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VoteOnContestation {
    return new Contract(address, _abi, signerOrProvider) as VoteOnContestation;
  }
}
