/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TestnetToken,
  TestnetTokenInterface,
} from "../../contracts/TestnetToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CLOCK_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clock",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c2576000549060ff8260081c16610070575060ff80821603610035575b604051612e519081620000c88239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146101f7578063095ea7b3146101f257806318160ddd146101ed57806323b872dd146101e8578063313ce567146101e35780633644e515146101de57806339509351146101d95780633a46b1a8146101d457806340c10f19146101cf5780634bf5d7e9146101ca578063587cde1e146101c55780635c19a95c146101c05780636fcfff45146101bb57806370a08231146101b6578063715018a6146101b15780637ecebe00146101ac5780638129fc1c146101a757806384b0196e146101a25780638da5cb5b1461019d5780638e539e8c1461019857806391ddadf41461019357806395d89b411461018e5780639ab24eb014610189578063a457c2d714610184578063a9059cbb1461017f578063c3cda5201461017a578063d505accf14610175578063dd62ed3e14610170578063f1127ed81461016b5763f2fde38b1461016657600080fd5b611287565b611200565b6111a8565b611062565b610f37565b610ef1565b610e43565b610de1565b610d3a565b610d0e565b610bb5565b610b8c565b610af1565b610988565b61094e565b6108f0565b6108b6565b61086e565b61084c565b610811565b610767565b61066c565b610517565b6104bf565b61049c565b610480565b6103b5565b610397565b610366565b610250565b919082519283825260005b848110610228575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610207565b90602061024d9281815201906101fc565b90565b3461033557600080600319360112610332576040519080603654610273816113bd565b8085529160019180831690811561030857506001146102ad575b6102a98561029d8187038261144a565b6040519182918261023c565b0390f35b9250603683527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b8284106102f057505050810160200161029d826102a961028d565b805460208587018101919091529093019281016102d5565b8695506102a99693506020925061029d94915060ff191682840152151560051b820101929361028d565b80fd5b600080fd5b600435906001600160a01b038216820361033557565b602435906001600160a01b038216820361033557565b346103355760403660031901126103355761038c61038261033a565b60243590336117a3565b602060405160018152f35b34610335576000366003190112610335576020603554604051908152f35b34610335576060366003190112610335576103ce61033a565b6103d6610350565b6001600160a01b03821660009081526034602090815260408083203384529091529020604435919054926001840161041f575b6104139350611695565b60405160018152602090f35b82841061043b5761043683610413950333836117a3565b610409565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b3461033557600036600319011261033557602060405160128152f35b346103355760003660031901126103355760206104b761217c565b604051908152f35b34610335576040366003190112610335576104d861033a565b3360009081526034602090815260408083206001600160a01b038516845290915290205460243581018091116105125761038c91336117a3565b6115b1565b346103355760403660031901126103355761053061033a565b6024359061054f65ffffffffffff6105474361251c565b1683106119b5565b6001600160a01b0316600090815260cd602052604081208054929091836005811161061b575b50905b8382106105c65750508161059f575050602060005b6040516001600160e01b039091168152f35b6105ba6105c191602093600019019060005260206000200190565b5460201c90565b61058d565b90926105d2818561234c565b90818363ffffffff6105f86105ee848960005260206000200190565b5463ffffffff1690565b161115610609575050925b90610578565b90945061061691506115c7565b610603565b8061062b61063192969396612361565b90611a01565b908263ffffffff61064c6105ee858860005260206000200190565b16111561065c5750925b38610575565b9350610667906115c7565b610656565b346103355760403660031901126103355761068561033a565b6001600160a01b03811690602435908215610722578161070591610720946106b76106b2846035546115d5565b603555565b6001600160a01b0382166000908152603360209081526040808320805487019055518581527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a3612cff565b60355461071b906001600160e01b031015612d7c565b611dac565b005b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b34610335576000366003190112610335574365ffffffffffff6107894361251c565b16036107cc576102a961079a61192c565b7f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c7400000060208201526040519182918261023c565b60405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f64650000006044820152606490fd5b346103355760203660031901126103355760206001600160a01b038061083561033a565b1660005260cc825260406000205416604051908152f35b346103355760203660031901126103355761072061086861033a565b33611a5a565b34610335576020366003190112610335576001600160a01b0361088f61033a565b1660005260cd60205260206108a8604060002054612583565b63ffffffff60405191168152f35b34610335576020366003190112610335576001600160a01b036108d761033a565b1660005260336020526020604060002054604051908152f35b34610335576000806003193601126103325761090a61131c565b60fe80546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b34610335576020366003190112610335576001600160a01b0361096f61033a565b1660005260996020526020604060002054604051908152f35b34610335576000806003193601126103325780546109bd60ff8260081c161580928193610a5d575b8115610a3d575b506125e8565b806109d0600160ff196000541617600055565b610a24575b6109dd61266e565b6109e45780f35b6109f461ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a180f35b610a3861010061ff00196000541617600055565b6109d5565b303b15915081610a4f575b50386109b7565b6001915060ff161438610a48565b600160ff82161091506109b0565b91610a9e90949194600f60f81b8452610a9060209660e08887015260e08601906101fc565b9084820360408601526101fc565b92606083015260018060a01b03166080820152600060a082015260c081830391015281808451928381520193019160005b828110610add575050505090565b835185529381019392810192600101610acf565b34610335576000366003190112610335576065541580610b82575b15610b4557610b1961146c565b610b2161152a565b906102a9604051610b318161142e565b600081526040519384933091469186610a6b565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b5060665415610b0c565b346103355760003660031901126103355760fe546040516001600160a01b039091168152602090f35b3461033557602036600319011261033557600435610be465ffffffffffff610bdc4361251c565b1682106119b5565b60ce549060008260058111610ca7575b50905b828210610c44578280610c11575060405160008152602090f35b60ce6000526020906105c1907fd36cd1c74ef8d7326d8021b776c18fb5a5724b7f7bc93c2f42e43e10ef27d129016105ba565b9091610c50818461234c565b60ce600052908263ffffffff610c877fd36cd1c74ef8d7326d8021b776c18fb5a5724b7f7bc93c2f42e43e10ef27d12a85016105ee565b161115610c975750915b90610bf7565b9250610ca2906115c7565b610c91565b8061062b610cb792959395612361565b60ce600052908263ffffffff610cee7fd36cd1c74ef8d7326d8021b776c18fb5a5724b7f7bc93c2f42e43e10ef27d12a85016105ee565b161115610cfe5750915b38610bf4565b9250610d09906115c7565b610cf8565b34610335576000366003190112610335576020610d2a4361251c565b65ffffffffffff60405191168152f35b3461033557600080600319360112610332576040519080603754610d5d816113bd565b808552916001918083169081156103085750600114610d86576102a98561029d8187038261144a565b9250603783527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b828410610dc957505050810160200161029d826102a961028d565b80546020858701810191909152909301928101610dae565b34610335576020366003190112610335576001600160a01b03610e0261033a565b1660005260cd602052604060002080548015600014610e2957505060405160008152602090f35b602091610e3a916000190190611965565b5054811c61058d565b3461033557604036600319011261033557610e5c61033a565b60243590336000526034602052610e898160406000209060018060a01b0316600052602052604060002090565b5491808310610e9e57610413920390336117a3565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b346103355760403660031901126103355761038c610f0d61033a565b6024359033611695565b6064359060ff8216820361033557565b6084359060ff8216820361033557565b346103355760c036600319011261033557610f5061033a565b60443590602435610f5f610f17565b9280421161101d57610fef611018916107209560405190610fd782610fc96020820195898b8860609194939260808201957fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf835260018060a01b0316602083015260408201520152565b03601f19810184528361144a565b610fea60a43593608435935190206121f2565b611f96565b6001600160a01b0381166000908152609960205260409020805460018101909155909214611a0e565b611a5a565b60405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606490fd5b346103355760e03660031901126103355761107b61033a565b611083610350565b6044359060643592611093610f27565b938042116111635761114b61115e91610fc9610720976111386110d18760018060a01b03166000526099602052604060002090815491600183019055565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9602082019081526001600160a01b03808c1693830193909352918b166060820152608081018c905260a081019290925260c082019590955292839060e0820190565b610fea60c4359360a435935190206121f2565b6001600160a01b038381169116146118d3565b6117a3565b60405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b346103355760403660031901126103355760206111f76111c661033a565b6111ce610350565b6001600160a01b0391821660009081526034855260408082209290931681526020919091522090565b54604051908152f35b346103355760403660031901126103355761121961033a565b63ffffffff602435818116810361033557611263611269916040946000602087516112438161140d565b82815201526001600160a01b0316600090815260cd602052859020611965565b50611993565b8251815190921682526020908101516001600160e01b031690820152f35b34610335576020366003190112610335576112a061033a565b6112a861131c565b6112b061131c565b6001600160a01b038116156112c85761072090611374565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b60fe546001600160a01b0316330361133057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60fe80546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b90600182811c921680156113ed575b60208310146113d757565b634e487b7160e01b600052602260045260246000fd5b91607f16916113cc565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761142957604052565b6113f7565b6020810190811067ffffffffffffffff82111761142957604052565b90601f8019910116810190811067ffffffffffffffff82111761142957604052565b6040519060008260675491611480836113bd565b8083529260019081811690811561150857506001146114a9575b506114a79250038361144a565b565b6067600090815291507f9787eeb91fe3101235e4a76063c7023ecb40f923f97916639c598592fa30d6ae5b8483106114ed57506114a793505081016020013861149a565b81935090816020925483858a010152019101909185926114d4565b9050602092506114a794915060ff191682840152151560051b8201013861149a565b604051906000826068549161153e836113bd565b80835292600190818116908115611508575060011461156457506114a79250038361144a565b606860009081529150600080516020612dfc8339815191525b84831061159657506114a793505081016020013861149a565b81935090816020925483858a0101520191019091859261157d565b634e487b7160e01b600052601160045260246000fd5b906001820180921161051257565b9190820180921161051257565b156115e957565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b1561164157565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b6001600160a01b039291908381168015611750576114a7948316906116bb8215156115e2565b6001600160a01b03831660009081526033602052604090208590546116e28282101561163a565b036116ff8460018060a01b03166000526033602052604060002090565b556001600160a01b03841660009081526033602090815260409182902080548801905590518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a3612d4a565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b038082169291908315611882578216938415611832578061181c7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259461180561182d9560018060a01b03166000526034602052604060002090565b9060018060a01b0316600052602052604060002090565b556040519081529081906020820190565b0390a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b156118da57565b60405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606490fd5b604051906114a78261140d565b604051906119398261140d565b601d8252565b6040519061194c8261140d565b60058252565b6040519061195f8261140d565b60018252565b805482101561197d5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b906040516119a08161140d565b602081935463ffffffff81168352811c910152565b156119bc57565b60405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20667574757265206c6f6f6b7570000000000000006044820152606490fd5b9190820391821161051257565b15611a1557565b60405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606490fd5b6114a79160018060a01b0380921660009281845260cc60205280604085205416809260336020527f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60408720549660cc6020526040812094871694856bffffffffffffffffffffffff60a01b82541617905580a45b6001600160a01b03808316939291168084141580611ce2575b611af3575b50505050565b80611b61575b5082611b06575b80611aed565b6001600160a01b0316600090815260cd602052604090207fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72491611b4891611edd565b60408051928352602083019190915290a2388080611b00565b8060005260cd6020527fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7246040600020805480159182600014611cbf57611ba561191f565b6000815260006020820152915b6020830151611bd1906001600160e01b03165b6001600160e01b031690565b92611bdc8985612de1565b94159081611c9c575b5015611c3a57611c0d611c2492611bfb866124b3565b92600019019060005260206000200190565b9063ffffffff82549181199060201b169116179055565b604080519182526020820192909252a238611af9565b50611c9790611c5e611c59611c4e4361251c565b65ffffffffffff1690565b612583565b90611c92611c6b866124b3565b611c82611c7661191f565b63ffffffff9095168552565b6001600160e01b03166020840152565b611d52565b611c24565b5163ffffffff16905063ffffffff611cb6611c4e4361251c565b91161438611be5565b611cdc611cd760001984018360005260206000200190565b611993565b91611bb2565b50821515611ae8565b60ce5490600160401b82101561142957600182018060ce5582101561197d5760ce600052805160209182015190911b63ffffffff191663ffffffff91909116177fd36cd1c74ef8d7326d8021b776c18fb5a5724b7f7bc93c2f42e43e10ef27d12a90910155565b8054600160401b81101561142957611d6f91600182018155611965565b611d9657815160209283015190921b63ffffffff191663ffffffff92909216919091179055565b634e487b7160e01b600052600060045260246000fd5b60ce5490918115918215611ea857611dc261191f565b60008152600060208201525b6020810151611df090611de9906001600160e01b0316611bc5565b9586612dee565b93159081611e85575b5015611e3a576114a790611c0d611e0f856124b3565b60ce600052917fd36cd1c74ef8d7326d8021b776c18fb5a5724b7f7bc93c2f42e43e10ef27d1290190565b506114a7611e4d611c59611c4e4361251c565b611e80611e59856124b3565b611e70611e6461191f565b63ffffffff9094168452565b6001600160e01b03166020830152565b611ceb565b5163ffffffff16905063ffffffff611e9f611c4e4361251c565b91161438611df9565b60ce600052611ed87fd36cd1c74ef8d7326d8021b776c18fb5a5724b7f7bc93c2f42e43e10ef27d1298201611993565b611dce565b909181549182159283600014611f7957611ef561191f565b60008152600060208201525b6020810151611f2390611f1c906001600160e01b0316611bc5565b9687612dee565b94159081611f56575b5015611f4257611c0d6114a792611bfb866124b3565b506114a790611c5e611c59611c4e4361251c565b5163ffffffff16905063ffffffff611f70611c4e4361251c565b91161438611f2c565b611f91611cd760001983018460005260206000200190565b611f01565b9161024d9391611fa5936120ed565b919091611fcd565b60051115611fb757565b634e487b7160e01b600052602160045260246000fd5b611fd681611fad565b80611fde5750565b611fe781611fad565b600181036120345760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b61203d81611fad565b6002810361208a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80612096600392611fad565b1461209d57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116121705791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156121635781516001600160a01b0381161561215d579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b612184612218565b61218c612263565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176114295760405251902090565b6042906121fd61217c565b906040519161190160f01b8352600283015260228201522090565b61222061146c565b8051908115612230576020012090565b5050606554801561223e5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b60405160685490600081612276846113bd565b9182825260209283830195600190818116908160001461230e57506001146122c1575b50506122a79250038261144a565b519081156122b3572090565b5050606654801561223e5790565b909391506068600052600080516020612dfc833981519152936000915b8183106122f65750506122a793508201013880612299565b855487840185015294850194869450918301916122de565b9150506122a794925060ff19168652151560051b8201013880612299565b8115612336570490565b634e487b7160e01b600052601260045260246000fd5b90808216911860011c81018091116105125790565b801561249b578061243461242d61242361241961240f6124056123fb6123f1600161024d9a6000908b60801c8061248f575b508060401c80612482575b508060201c80612475575b508060101c80612468575b508060081c8061245b575b508060041c8061244e575b508060021c80612441575b50821c61243a575b811c1b6123ea818b61232c565b0160011c90565b6123ea818a61232c565b6123ea818961232c565b6123ea818861232c565b6123ea818761232c565b6123ea818661232c565b6123ea818561232c565b809261232c565b906124a1565b81016123dd565b60029150910190386123d5565b60049150910190386123ca565b60089150910190386123bf565b60109150910190386123b4565b60209150910190386123a9565b604091509101903861239e565b91505060809038612393565b50600090565b90808210156124ae575090565b905090565b6001600160e01b03908181116124c7571690565b60405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608490fd5b65ffffffffffff9081811161252f571690565b60405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608490fd5b63ffffffff90818111612594571690565b60405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608490fd5b156125ef57565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b604051906126588261140d565b60078252665441726269757360c81b6020830152565b61267661264b565b61267e61193f565b602064544149555360d81b818301526126a760ff60005460081c166126a2816127c0565b6127c0565b82519067ffffffffffffffff8211611429576126cd826126c86036546113bd565b61283e565b80601f831160011461272d5750819061270294600092612722575b50508160011b916000199060031b1c1916176036556129f0565b61271261270d61264b565b612bb2565b61271a612cee565b6114a7612820565b0151905038806126e8565b919293601f19841661276160366000527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b890565b936000905b8282106127a85750509160019391856127029796941061278f575b505050811b016036556129f0565b015160001960f88460031b161c19169055388080612781565b80600186978294978701518155019601940190612766565b156127c757565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b61283560ff60005460081c166126a2816127c0565b6114a733611374565b601f811161284a575050565b600090603682527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b8906020601f850160051c830194106128a5575b601f0160051c01915b82811061289a57505050565b81815560010161288e565b9092508290612885565b601f81116128bb575050565b600090606782527f9787eeb91fe3101235e4a76063c7023ecb40f923f97916639c598592fa30d6ae906020601f850160051c83019410612916575b601f0160051c01915b82811061290b57505050565b8181556001016128ff565b90925082906128f6565b601f811161292c575050565b600090603782527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae906020601f850160051c83019410612987575b601f0160051c01915b82811061297c57505050565b818155600101612970565b9092508290612967565b601f811161299d575050565b60009060688252600080516020612dfc833981519152906020601f850160051c830194106129e6575b601f0160051c01915b8281106129db57505050565b8181556001016129cf565b90925082906129c6565b90815167ffffffffffffffff811161142957612a1681612a116037546113bd565b612920565b602080601f8311600114612a525750819293600092612a47575b50508160011b916000199060031b1c191617603755565b015190503880612a30565b90601f19831694612a8560376000527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae90565b926000905b878210612ac2575050836001959610612aa9575b505050811b01603755565b015160001960f88460031b161c19169055388080612a9e565b80600185968294968601518155019501930190612a8a565b90815167ffffffffffffffff811161142957612b0081612afb6068546113bd565b612991565b602080601f8311600114612b3c5750819293600092612b31575b50508160011b916000199060031b1c191617606855565b015190503880612b1a565b90601f19831694612b5d6068600052600080516020612dfc83398151915290565b926000905b878210612b9a575050836001959610612b81575b505050811b01606855565b015160001960f88460031b161c19169055388080612b76565b80600185968294968601518155019501930190612b62565b60ff60005460081c16612bc4816127c0565b612bcc611952565b90612be1602091603160f81b838501526127c0565b82519067ffffffffffffffff821161142957612c0782612c026067546113bd565b6128af565b80601f8311600114612c5b57508190612c3c94600092612c50575b50508160011b916000199060031b1c191617606755612ada565b612c466000606555565b6114a76000606655565b015190503880612c22565b919293601f198416612c8f60676000527f9787eeb91fe3101235e4a76063c7023ecb40f923f97916639c598592fa30d6ae90565b936000905b828210612cd6575050916001939185612c3c97969410612cbd575b505050811b01606755612ada565b015160001960f88460031b161c19169055388080612caf565b80600186978294978701518155019601940190612c94565b6114a760ff60005460081c166127c0565b60cc6020527f435daec636ce435a90bde0aeec309a303a359a854c5a51b7d6a5a941d6db6094546001600160a01b03918216600090815260409020546114a793929081169116611acf565b6001600160a01b03908116600090815260cc60205260408082205493831682529020546114a793929082169116611acf565b15612d8357565b60405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608490fd5b9081039081116105125790565b908101809111610512579056fea2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c22097753a264697066735822122065244d9bfee4cf081dcb70d4ed5802ab0d292e9db0fa213c2ec88b83e9ccf09364736f6c63430008130033";

type TestnetTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestnetTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestnetToken__factory extends ContractFactory {
  constructor(...args: TestnetTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestnetToken> {
    return super.deploy(overrides || {}) as Promise<TestnetToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestnetToken {
    return super.attach(address) as TestnetToken;
  }
  override connect(signer: Signer): TestnetToken__factory {
    return super.connect(signer) as TestnetToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestnetTokenInterface {
    return new utils.Interface(_abi) as TestnetTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestnetToken {
    return new Contract(address, _abi, signerOrProvider) as TestnetToken;
  }
}
