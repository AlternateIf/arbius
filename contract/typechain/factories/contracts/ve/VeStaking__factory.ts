/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VeStaking,
  VeStakingInterface,
} from "../../../contracts/ve/VeStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_votingEscrow",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "BalanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "_updateBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "_withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingEscrow",
    outputs: [
      {
        internalType: "contract IVotingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100ca57601f6111de38819003918201601f19168301916001600160401b038311848410176100cf5780849260409485528339810103126100ca57610052602061004b836100e5565b92016100e5565b60008054336001600160a01b0319808316821784556040519590946001600160a01b03949093859391908416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a362093a8060055516836001541617600155169060025416176002556110e490816100fa8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100ca5756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816318160ddd14610d09575080631c1f78eb14610cec5780631c4b774b14610a58578063386a952514610a395780633c6b16ab146108925780634d6ed8c4146108725780634f2bfe5b1461084957806361dc2c3614610752578063715018a6146107075780637b0a47ee146106ea57806380faa57d146106cd5780638980f11f146105a15780638da5cb5b146105795780639cc7f70814610552578063ac6a2b5d14610493578063c8f33c9114610474578063cc1a378f14610391578063cd3daf9d1461036d578063d0779da814610346578063d1af0c7d1461031d578063dad3aab614610252578063df136d6514610233578063ebe2b12b14610210578063f2fde38b146101605763f301af421461013657600080fd5b3461015c57602036600319011261015c5760209282913581526009845220549051908152f35b8280fd5b503461015c57602036600319011261015c5761017a610d40565b90610183610d56565b6001600160a01b039182169283156101be57505082546001600160a01b03198116831784551660008051602061108f8339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b50503461022f578160031936011261022f576020906003549051908152f35b5080fd5b50503461022f578160031936011261022f576020906007549051908152f35b50503461022f577ffa03b6304af61f28308225e213bf003207602328c0dad9495c9b2d61eec74f4561028336610d25565b61029b60018060a09694961b03600254163314610f51565b6102a3610fe6565b6007556102ae610fd4565b600655836102f7575b838552600b60205281852054906102d9816102d484600a54610dae565b610de4565b600a55848652600b602052808387205582519182526020820152a280f35b61030084611040565b8486526009602052828620556007546008602052828620556102b7565b50503461022f578160031936011261022f5760015490516001600160a01b039091168152602090f35b503461015c57602036600319011261015c5760209282913581526008845220549051908152f35b50503461022f578160031936011261022f5760209061038a610fe6565b9051908152f35b50903461015c57602036600319011261015c578135916103af610d56565b6003544211156103eb5750816020917ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d39360055551908152a180f35b602060a492519162461bcd60e51b8352820152605860248201527f50726576696f7573207265776172647320706572696f64206d7573742062652060448201527f636f6d706c657465206265666f7265206368616e67696e672074686520647572606482015277185d1a5bdb88199bdc881d1a19481b995dc81c195c9a5bd960421b6084820152fd5b50503461022f578160031936011261022f576020906006549051908152f35b503461015c5760208060031936011261054e577f0c875c8d391179c5cf7ad8303d268efd50b8beb78b671f85cd54bfb91eb8ef409135926104df60018060a01b03600254163314610f51565b6104e7610fe6565b6007556104f2610fd4565b6006558361052a575b838552600b8252808520549061051382600a54610dae565b600a55848652600b8352858181205551908152a280f35b61053384611040565b848652600983528186205560075460088352818620556104fb565b8380fd5b503461015c57602036600319011261015c576020928291358152600b845220549051908152f35b50503461022f578160031936011261022f57905490516001600160a01b039091168152602090f35b503461015c578160031936011261015c576105ba610d40565b602435916105c6610d56565b6001546001600160a01b03838116929116821461068057836106019260209288885180968195829463a9059cbb60e01b845233908401610e4a565b03925af180156106765793610642917f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2895610648575b505192839283610e4a565b0390a180f35b6106689060203d811161066f575b6106608183610e11565b810190610e65565b5038610637565b503d610656565b84513d87823e3d90fd5b608490602086519162461bcd60e51b8352820152602160248201527f43616e6e6f7420776974686472617720746865207265776172647320746f6b656044820152603760f91b6064820152fd5b50503461022f578160031936011261022f5760209061038a610fd4565b503461015c578260031936011261015c5760209250549051908152f35b833461074f578060031936011261074f57610720610d56565b80546001600160a01b03198116825581906001600160a01b031660008051602061108f8339815191528280a380f35b80fd5b50903461015c5761076236610d25565b91909261077a60018060a01b03600254163314610f51565b610782610fe6565b60075561078d610fd4565b60065583610823575b82156107f05750816020916107ce7f925435fa7e37e5d9555bb18ce0d62bb9627d0846942e58e5291e9a2dded462ed94600a54610de4565b600a55848652600b83528086206107e6838254610de4565b905551908152a280f35b6020606492519162461bcd60e51b8352820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152fd5b61082c84611040565b848652600960205282862055600754600860205282862055610796565b50503461022f578160031936011261022f5760025490516001600160a01b039091168152602090f35b50913461074f57602036600319011261074f575061038a60209235611040565b5082903461022f576020908160031936011261015c578035906108b3610fe6565b600755600354428111610a08575062093a80806108d260055442610de4565b048181029181830414901517156109f5576108f4816024926003554290610dae565b6108fe8185610df1565b83555b4260065560015487516370a0823160e01b8152308582015292869184919082906001600160a01b03165afa9182156109eb5786926109b6575b5061094790835492610df1565b1061097857507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d929351908152a180f35b845162461bcd60e51b815290810183905260186024820152770a0e4deecd2c8cac840e4caeec2e4c840e8dede40d0d2ced60431b6044820152606490fd5b9091508481813d83116109e4575b6109ce8183610e11565b810103126109e057519061094761093a565b8580fd5b503d6109c4565b87513d88823e3d90fd5b634e487b7160e01b855260118252602485fd5b610a156024914290610dae565b610a3281610a2d610a27865483610dd1565b87610de4565b610df1565b8355610901565b50503461022f578160031936011261022f576020906005549051908152f35b5082903461022f5760208060031936011261015c578135610a77610fe6565b600755610a82610fd4565b60065580610cc8575b60025485516331a9108f60e11b81528481018390526001600160a01b0392909184908390602490829087165afa9182156109eb578692610c90575b508552600983528585209384549485610add578680f35b869055600154875163a9059cbb60e01b8682019081529185169080610b06898760248401610e4a565b0391610b1a601f1993848101845283610e11565b8a51936001600160401b0392858d0184811187821017610c7d578d528986527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564868b0152518b9182919082855af1913d15610c6d573d908111610c5a5790610b9f94939291610b928a8e5195601f8401160185610e11565b83523d8b8a85013e610e7d565b805190858215928315610c42575b50505015610bec57507fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486939495519485521692a2808280808080808680f35b865162461bcd60e51b8152908101849052602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b610c529350820181019101610e65565b888581610bad565b634e487b7160e01b8b526041865260248bfd5b5090610b9f939250606091610e7d565b634e487b7160e01b8d526041885260248dfd5b9091508381813d8311610cc1575b610ca88183610e11565b810103126109e0575182811681036109e0579087610ac6565b503d610c9e565b610cd181611040565b81855260098352858520556007546008835285852055610a8b565b50503461022f578160031936011261022f5760209061038a610fa9565b84903461022f578160031936011261022f57602090600a548152f35b6040906003190112610d3b576004359060243590565b600080fd5b600435906001600160a01b0382168203610d3b57565b6000546001600160a01b03163303610d6a57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b91908203918211610dbb57565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715610dbb57565b91908201809211610dbb57565b8115610dfb570490565b634e487b7160e01b600052601260045260246000fd5b601f909101601f19168101906001600160401b03821190821017610e3457604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b039091168152602081019190915260400190565b90816020910312610d3b57518015158103610d3b5790565b91929015610edf5750815115610e91575090565b3b15610e9a5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610ef25750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610f38575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350610f15565b15610f5857565b60405162461bcd60e51b815260206004820152602360248201527f43616c6c6572206973206e6f7420566f74696e67457363726f7720636f6e74726044820152621858dd60ea1b6064820152608490fd5b600354428111610fb95750600090565b610fd190610fcb600454914290610dae565b90610dd1565b90565b600354804210600014610fd157504290565b600a5480156110395760075461100c600454610fcb611003610fd4565b60065490610dae565b670de0b6b3a764000090818102918183041490151715610dbb57610fd19261103391610df1565b90610de4565b5060075490565b610fd19060406000828152600b602052670de0b6b3a764000061107d83832054610fcb61106b610fe6565b87865260086020528686205490610dae565b049281526009602052205490610de456fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220ecd1034c6dd7c5629a7eef74136109c87b57c86067c09255c20af69ed269a35d64736f6c63430008130033";

type VeStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VeStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VeStaking__factory extends ContractFactory {
  constructor(...args: VeStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rewardsToken: PromiseOrValue<string>,
    _votingEscrow: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VeStaking> {
    return super.deploy(
      _rewardsToken,
      _votingEscrow,
      overrides || {}
    ) as Promise<VeStaking>;
  }
  override getDeployTransaction(
    _rewardsToken: PromiseOrValue<string>,
    _votingEscrow: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardsToken,
      _votingEscrow,
      overrides || {}
    );
  }
  override attach(address: string): VeStaking {
    return super.attach(address) as VeStaking;
  }
  override connect(signer: Signer): VeStaking__factory {
    return super.connect(signer) as VeStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeStakingInterface {
    return new utils.Interface(_abi) as VeStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VeStaking {
    return new Contract(address, _abi, signerOrProvider) as VeStaking;
  }
}
