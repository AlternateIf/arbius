/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LookupModelAddress,
  LookupModelAddressInterface,
} from "../../../contracts/Example/LookupModelAddress";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IArbius",
        name: "_arbius",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "modelid",
        type: "bytes32",
      },
    ],
    name: "lookupModelAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007457601f6102a938819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161021990816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001457600080fd5b600091823560e01c63205ef0ca1461002b57600080fd5b34610168576020928360031936011261019c5760018060a01b039181816024818684541663e236f46b60e01b825260043560048301525afa91821561019f579081869361007f575b50500151169051908152f35b915091503d8082843e61009281846101aa565b820190858383031261019c5782516001600160401b03938482116101685701926080848403126101985785519360808501858110838211176101845787528051855287810151868116810361018057888601528681015187860152606081015190828211610180570183601f8201121561016857805191821161016c57865193610125601f8401601f19168a01866101aa565b8285528883830101116101685787949392918591835b8281106101545750508301015260608201523880610073565b81810184015186820185015287930161013b565b8280fd5b634e487b7160e01b83526041600452602483fd5b8380fd5b634e487b7160e01b84526041600452602484fd5b5080fd5b80fd5b8451903d90823e3d90fd5b601f909101601f19168101906001600160401b038211908210176101cd57604052565b634e487b7160e01b600052604160045260246000fdfea264697066735822122081681f3db84d3d87a0ff3eb830d8a31438462bfbc330d9079eb6c347f0b61fd164736f6c63430008130033";

type LookupModelAddressConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LookupModelAddressConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LookupModelAddress__factory extends ContractFactory {
  constructor(...args: LookupModelAddressConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _arbius: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LookupModelAddress> {
    return super.deploy(
      _arbius,
      overrides || {}
    ) as Promise<LookupModelAddress>;
  }
  override getDeployTransaction(
    _arbius: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_arbius, overrides || {});
  }
  override attach(address: string): LookupModelAddress {
    return super.attach(address) as LookupModelAddress;
  }
  override connect(signer: Signer): LookupModelAddress__factory {
    return super.connect(signer) as LookupModelAddress__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LookupModelAddressInterface {
    return new utils.Interface(_abi) as LookupModelAddressInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LookupModelAddress {
    return new Contract(address, _abi, signerOrProvider) as LookupModelAddress;
  }
}
