/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LookupTaskCID,
  LookupTaskCIDInterface,
} from "../../../contracts/Example/LookupTaskCID";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IArbius",
        name: "_arbius",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskid",
        type: "bytes32",
      },
    ],
    name: "lookupTaskCID",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007457601f61030238819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161027290816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001457600080fd5b6000803560e01c63eecd52261461002a57600080fd5b346101a157602090816003193601126101a15760018060a01b039080856024818584541662e579f560e81b825260043560048301525afa9485156101d45781956100a4575b50505060a061009693015182519382859384528251928184809387015286860191016101e0565b601f01601f19168101030190f35b909194503d8083833e6100b78183610203565b81019183828403126101a15781516001600160401b03928382116101b8570160c0818503126101d05785519660c08801888110858211176101bc5787528151885285820151868901528682015190811681036101b85786880152606081015183811681036101b8576060880152608081015160ff811681036101b857608088015260a0810151908382116101b857019083601f830112156101a15781519283116101a457855193610171601f8501601f1916870186610203565b8385528584840101116101a1575091610196610096969260a0948680850191016101e0565b82820152933861006f565b80fd5b634e487b7160e01b81526041600452602490fd5b8280fd5b634e487b7160e01b84526041600452602484fd5b5080fd5b508351903d90823e3d90fd5b60005b8381106101f35750506000910152565b81810151838201526020016101e3565b601f909101601f19168101906001600160401b0382119082101761022657604052565b634e487b7160e01b600052604160045260246000fdfea264697066735822122083faf784881cf721ed2f577e04d250ecab6dfeee617efb6b98655da687a3474764736f6c63430008130033";

type LookupTaskCIDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LookupTaskCIDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LookupTaskCID__factory extends ContractFactory {
  constructor(...args: LookupTaskCIDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _arbius: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LookupTaskCID> {
    return super.deploy(_arbius, overrides || {}) as Promise<LookupTaskCID>;
  }
  override getDeployTransaction(
    _arbius: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_arbius, overrides || {});
  }
  override attach(address: string): LookupTaskCID {
    return super.attach(address) as LookupTaskCID;
  }
  override connect(signer: Signer): LookupTaskCID__factory {
    return super.connect(signer) as LookupTaskCID__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LookupTaskCIDInterface {
    return new utils.Interface(_abi) as LookupTaskCIDInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LookupTaskCID {
    return new Contract(address, _abi, signerOrProvider) as LookupTaskCID;
  }
}
