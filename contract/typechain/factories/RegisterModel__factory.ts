/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RegisterModel, RegisterModelInterface } from "../RegisterModel";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IArbius",
        name: "_arbius",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_template",
        type: "bytes",
      },
    ],
    name: "registerModel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60803461007457601f61028138819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b0319169190911790556040516101f190816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c630131ebac1461002a57600080fd5b3461017f57602090816003193601126101635767ffffffffffffffff60043581811161017b573660238201121561017b578060040135918211610167578490601f199261007e8685601f8401160186610183565b808552366024828401011161016357808694959392916024869301838601378301015260018060a01b03855416856040519485936327f81f7d60e11b855230600486015267016345785d8a0000602486015260606044860152805190816064870152835b828110610148575050848392601f8383966084809686010152011681010301925af1801561013d57610112578280f35b813d8311610136575b6101258183610183565b810103126101335738808280f35b80fd5b503d61011b565b6040513d85823e3d90fd5b8082018801518982016084015289978997508b9550016100e2565b8280fd5b634e487b7160e01b85526041600452602485fd5b8480fd5b5080fd5b90601f8019910116810190811067ffffffffffffffff8211176101a557604052565b634e487b7160e01b600052604160045260246000fdfea26469706673582212201cf6b8a1a2013f58e6b007c5043fb72e17a632350c12bfde83ba5119fc8f5c2164736f6c63430008130033";

type RegisterModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegisterModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RegisterModel__factory extends ContractFactory {
  constructor(...args: RegisterModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _arbius: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RegisterModel> {
    return super.deploy(_arbius, overrides || {}) as Promise<RegisterModel>;
  }
  getDeployTransaction(
    _arbius: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_arbius, overrides || {});
  }
  attach(address: string): RegisterModel {
    return super.attach(address) as RegisterModel;
  }
  connect(signer: Signer): RegisterModel__factory {
    return super.connect(signer) as RegisterModel__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegisterModelInterface {
    return new utils.Interface(_abi) as RegisterModelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RegisterModel {
    return new Contract(address, _abi, signerOrProvider) as RegisterModel;
  }
}
