/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Voter, VoterInterface } from "../Voter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_votingEscrow",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "Abstained",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "model",
        type: "bytes32",
      },
    ],
    name: "GaugeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "model",
        type: "bytes32",
      },
    ],
    name: "GaugeKilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "model",
        type: "bytes32",
      },
    ],
    name: "GaugeRevived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "model",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "whitelister",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "model",
        type: "bytes32",
      },
    ],
    name: "Whitelisted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_model",
        type: "bytes32",
      },
    ],
    name: "createGauge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "epochVoteEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_model",
        type: "bytes32",
      },
    ],
    name: "getGaugeMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "isAlive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "isGauge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_model",
        type: "bytes32",
      },
    ],
    name: "killGauge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastVoted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "modelVote",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "models",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "poke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_model",
        type: "bytes32",
      },
    ],
    name: "reviveGauge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usedWeights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_modelVote",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "votes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "weights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_model",
        type: "bytes32",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0346100d157601f61152438819003918201601f19168301916001600160401b038311848410176100d6578084926020946040528339810103126100d157516001600160a01b039081811681036100d1576000543360018060a01b0319821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360805261143790816100ed82396080518181816107de0152818161095601528181610acf01528181610e8301528181610f0001528181610f4b015261121d0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c90816301a5e3fe14610c34575080630c29575514610a335780631b8dd06014610a065780631f7b6d32146109e8578063310bd74b146108ee57806332145f901461080d5780634f2bfe5b146107ca578063591e5582146106e05780635a1fdbc01461069a5780635b0c8a63146106695780636a030ca914610639578063715018a6146105f157806379e93824146105c95780637addf675146105a15780637eca406f1461057757806382fe6eae146104d35780638da5cb5b146104ac57806396c82e571461048e578063afb40c8e146103ee578063b65a78b5146103c2578063ecc44a381461035e578063f2fde38b146102a5578063f3594be01461027d5763f93151571461012d57600080fd5b34610279576020806003193601126102755783359182845284825260ff81852054166102495783546001600160a01b03163303610205575b828452600a825280842060ff1990600182825416179055858352600182862091825416179055600354600160401b8110156101f25760018101806003558110156101df5790837f77876d089a7d38cac3b6e288e4ca85feb58464def721da44f6a7c2a00583f3d0939260038752838720015551338152a280f35b634e487b7160e01b855260328652602485fd5b634e487b7160e01b855260418652602485fd5b8284526009825260ff8185205416610165575162461bcd60e51b815280850191909152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606490fd5b5162461bcd60e51b815280850191909152600660248201526565786973747360d01b6044820152606490fd5b8280fd5b5080fd5b5082346102755760203660031901126102755760209282913581526008845220549051908152f35b50829034610275576020366003190112610275576001600160a01b0382358181169391929084900361035a576102d9610cc2565b831561030857505082546001600160a01b0319811683178455166000805160206113e28339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b503461027957816003193601126102795762093a809182420492808402938085048214901517156103af57830180931161039c576020838351908152f35b634e487b7160e01b815260118452602490fd5b634e487b7160e01b825260118552602482fd5b50823461027557602036600319011261027557816020938260ff93358252855220541690519015158152f35b508290346102755760203660031901126102755781359161040d610cc2565b828452600960205260ff828520541661045e575081835260096020528220805460ff19166001179055337fc27d38ad1bdb4164d72e05492b5ce6099b4169e9f20b41d3c7cf35c114a64d5b8380a380f35b6020606492519162461bcd60e51b8352820152600b60248201526a1dda1a5d195b1a5cdd195960aa1b6044820152fd5b50346102795781600319360112610279576020906001549051908152f35b5034610279578160031936011261027957905490516001600160a01b039091168152602090f35b50829034610275576020366003190112610275578135916104f2610cc2565b828452600a60205260ff8285205416156105405750818352600a6020528220805460ff191690557fd74a749bb4df681cf3299934daed7f425a12566ad01c4cba314166599b3632e58280a280f35b6020606492519162461bcd60e51b8352820152601260248201527119d85d59d948185b1c9958591e481919585960721b6044820152fd5b50903461059e57602036600319011261059e575061059760209235611394565b9051908152f35b80fd5b5082346102755760203660031901126102755760209282913581526002845220549051908152f35b5082346102755760203660031901126102755760209282913581526007845220549051908152f35b823461059e578060031936011261059e5761060a610cc2565b80546001600160a01b03198116825581906001600160a01b03166000805160206113e28339815191528280a380f35b50823461027557602036600319011261027557356003548110156102755760208360038295522001549051908152f35b5082346102755781600319360112610275576020928291358152600584528181206024358252845220549051908152f35b50903461059e578160031936011261059e5760243592358152600660205281812090815484101561059e57506020926106d291610c94565b91905490519160031b1c8152f35b50829034610275576020806003193601126107c657823592610700610cc2565b83855280825260ff83862054161561079757838552600a825260ff83862054166107605750828452600a90528220805460ff191660011790557fdc036edc2c876189d8f78d214d657d28a486b78851be01e52717181f351b08338280a280f35b915162461bcd60e51b8152918201526013602482015272676175676520616c726561647920616c69766560681b6044820152606490fd5b915162461bcd60e51b815291820152600b60248201526a6e6f74206120676175676560a81b6044820152606490fd5b8380fd5b5034610279578160031936011261027957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b509134610279576020908160031936011261027557359283835260068252808320908051808385829554938481520190875285872092875b878282106108d85750505061085c92500383610d43565b81519061086882610d66565b9361087582519586610d43565b828552601f1961088484610d66565b013682870137855b8381106108a2578661089f87878b610e53565b80f35b6108d390888852600583528388206108ba8288610da2565b5189528352838820546108cd8289610da2565b52610d7d565b61088c565b8554845260019586019588955093019201610845565b508290346102755760203660031901126102755781359162093a808042048181029181830414901517156109d5578361095292610938602093838952600885528689205410610dd6565b845163430c208160e01b8152938492839233908401610e2b565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9182156109cc5750839161099e575b50156102795761089f906111fb565b6109bf915060203d81116109c5575b6109b78183610d43565b810190610e13565b8361098f565b503d6109ad565b513d85823e3d90fd5b634e487b7160e01b855260118252602485fd5b50346102795781600319360112610279576020906003549051908152f35b508234610275576020366003190112610275578160209360ff92358152600a855220541690519015158152f35b5034610279576060366003190112610279576001600160401b03833560243582811161035a57610a669036908701610c5f565b92604435908111610c3057610a7e9036908801610c5f565b909162093a809788420489810299818b041490151715610c1d57848852610aaf60209960088b52888a205410610dd6565b865163430c208160e01b8152898180610acb8933878401610e2b565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610c13578991610bf6575b5015610bf257828603610bbd5750838752600888524286882055610b2a85610d66565b94610b3787519687610d43565b8086528886019060051b820191368311610bb95789915b838210610baa5750505050610b6e610b6582610d66565b95519586610d43565b8085528685019060051b820191368311610ba657905b828210610b97578661089f878787610e53565b81358152908701908701610b84565b8680fd5b81358152908201908201610b4e565b8880fd5b865162461bcd60e51b8152908101899052600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606490fd5b8780fd5b610c0d91508a3d8c116109c5576109b78183610d43565b38610b07565b88513d8b823e3d90fd5b634e487b7160e01b885260119052602487fd5b8580fd5b92939050346107c65760203660031901126107c6573583526009602090815292205460ff1615158152f35b9181601f84011215610c8f578235916001600160401b038311610c8f576020808501948460051b010111610c8f57565b600080fd5b8054821015610cac5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b03163303610cd657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b038111610d2d57604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b03821190821017610d2d57604052565b6001600160401b038111610d2d5760051b60200190565b6000198114610d8c5760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015610cac5760209160051b010190565b8115610dc0570490565b634e487b7160e01b600052601260045260246000fd5b15610ddd57565b60405162461bcd60e51b815260206004820152600e60248201526d0dedcd8f240dccaee40cae0dec6d60931b6044820152606490fd5b90816020910312610c8f57518015158103610c8f5790565b6001600160a01b039091168152602081019190915260400190565b91908201809211610d8c57565b9291610e5e846111fb565b81516040516339f890b560e21b815260048101869052946000929091906020876024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9687156111e35784976111af575b508384978596865b85811061118b5750865b858110610fb05750505050505082610efe575b610ef06040939495600154610e46565b600155815260076020522055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b156102795760405163fd4a77f160e01b815260048101829052948286602481837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1958615610fa5576040949596610f90575b5094939250610ee0565b92610f9e610ef09294610d1a565b9290610f86565b6040513d85823e3d90fd5b610fba8183610da2565b51808952600a60205260ff60408a205416610fdf575b50610fda90610d7d565b610ecd565b610fec82879d9b9d610da2565b5180858102048514811517156111775785856110089202610db6565b9b888a52600560205260408a20828b5260205260408a2054611142578c1561110f57888a52600660205260408a20805490600160401b8210156110fb576110b78f610fda96959460408f8f61106788869860016110bd9b018155610c94565b81549060031b908b821b91600019901b19161790558882526002602052828220611092868254610e46565b905581526005602052818120888252602052206110b0838254610e46565b9055610e46565b9c610e46565b9c604051918a8352602083015260408201527f51d9b06f0a770c3d095eae34a710cd6cd036a1dde5859060f74e233d3d7f2dfc60603392a290610fd0565b634e487b7160e01b8c52604160045260248cfd5b60405162461bcd60e51b815260206004820152600b60248201526a1e995c9bc81dd95a59da1d60aa1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c6e6f6e7a65726f20766f74657360981b6044820152606490fd5b634e487b7160e01b8a52601160045260248afd5b926111a46111aa9161119d8688610da2565b5190610e46565b93610d7d565b610ec3565b9096506020813d6020116111db575b816111cb60209383610d43565b810103126107c657519538610ebb565b3d91506111be565b6040513d86823e3d90fd5b91908203918211610d8c57565b600081815260206006815260408083209384548495855b8281106112e95750507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169050803b1561035a57848091602485518094819363c1f0fb9f60e01b83528760048401525af180156112df576112cc575b5061128460019586546111ee565b8555835260078252828181205560068252822091825492818155836112ab575b5050505050565b815220908101905b8181106112c15780806112a4565b6000815582016112b3565b6112d890949194610d1a565b9238611276565b83513d87823e3d90fd5b6112f38183610c94565b90549060031b1c848852600590818852868920818a528852868920549182611327575b50505061132290610d7d565b611212565b6113808361132295949c8c7fa9f3ca5f8a9e1580edb2741e0ba560084ec72e0067ba3423f9e9327a176882db958c958e600281528784206113698782546111ee565b90558d84525285822091528c528c84812055610e46565b9a8151908882528a820152a1903880611316565b6001549081156113d357600052600260205260406000205490670de0b6b3a764000091828102928184041490151715610d8c576113d091610db6565b90565b5050670de0b6b3a76400009056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212205b2ed2bc960bee84269fe1b6b4c33ad95c4b4fe32b1698a26292b6b7948b72f464736f6c63430008130033";

type VoterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VoterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voter__factory extends ContractFactory {
  constructor(...args: VoterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _votingEscrow: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Voter> {
    return super.deploy(_votingEscrow, overrides || {}) as Promise<Voter>;
  }
  getDeployTransaction(
    _votingEscrow: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_votingEscrow, overrides || {});
  }
  attach(address: string): Voter {
    return super.attach(address) as Voter;
  }
  connect(signer: Signer): Voter__factory {
    return super.connect(signer) as Voter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoterInterface {
    return new utils.Interface(_abi) as VoterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Voter {
    return new Contract(address, _abi, signerOrProvider) as Voter;
  }
}
