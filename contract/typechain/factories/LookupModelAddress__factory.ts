/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LookupModelAddress,
  LookupModelAddressInterface,
} from "../LookupModelAddress";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IArbius",
        name: "_arbius",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "modelid",
        type: "bytes32",
      },
    ],
    name: "lookupModelAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161033938038061033983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6102a6806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063205ef0ca14610030575b600080fd5b61004361003e3660046100dc565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b6000805460405163e236f46b60e01b81526004810184905282916001600160a01b03169063e236f46b90602401600060405180830381865afa1580156100a9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526100d19190810190610165565b602001519392505050565b6000602082840312156100ee57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561012e5761012e6100f5565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561015d5761015d6100f5565b604052919050565b6000602080838503121561017857600080fd5b825167ffffffffffffffff8082111561019057600080fd5b90840190608082870312156101a457600080fd5b6101ac61010b565b82518152838301516001600160a01b03811681146101c957600080fd5b81850152604083810151908201526060830151828111156101e957600080fd5b80840193505086601f8401126101fe57600080fd5b825182811115610210576102106100f5565b610222601f8201601f19168601610134565b9250808352878582860101111561023857600080fd5b60005b8181101561025657848101860151848201870152850161023b565b50600090830190940193909352606083015250939250505056fea2646970667358221220f7001fb841b1efebe27d0e458dd47b713b10577856050618504e083ab647dc7b64736f6c63430008130033";

type LookupModelAddressConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LookupModelAddressConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LookupModelAddress__factory extends ContractFactory {
  constructor(...args: LookupModelAddressConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _arbius: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LookupModelAddress> {
    return super.deploy(
      _arbius,
      overrides || {}
    ) as Promise<LookupModelAddress>;
  }
  getDeployTransaction(
    _arbius: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_arbius, overrides || {});
  }
  attach(address: string): LookupModelAddress {
    return super.attach(address) as LookupModelAddress;
  }
  connect(signer: Signer): LookupModelAddress__factory {
    return super.connect(signer) as LookupModelAddress__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LookupModelAddressInterface {
    return new utils.Interface(_abi) as LookupModelAddressInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LookupModelAddress {
    return new Contract(address, _abi, signerOrProvider) as LookupModelAddress;
  }
}
