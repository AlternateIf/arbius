/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20DividendsV1,
  ERC20DividendsV1Interface,
} from "../ERC20DividendsV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "contract IERC20",
        name: "stakingToken_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "rewardToken_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastTotalReceived",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "pendingPayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReceived",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061159e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638f15b414116100b8578063a9059cbb1161007c578063a9059cbb1461027e578063ad5b2e6014610291578063aeae177c146102b1578063dd62ed3e146102c4578063e33b7de3146102d7578063f7c618c1146102e057600080fd5b80638f15b4141461023557806395d89b4114610248578063a3c2c46214610250578063a457c2d714610258578063a694fc3a1461026b57600080fd5b8063313ce567116100ff578063313ce567146101b757806339509351146101c65780634e71d92d146101d957806370a08231146101e157806372f702f31461020a57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f5780632e17de78146101a2575b600080fd5b6101446102f3565b60405161015191906110b3565b60405180910390f35b61016d610168366004611116565b610385565b6040519015158152602001610151565b6035545b604051908152602001610151565b61016d61019d366004611142565b61039f565b6101b56101b0366004611183565b6103c3565b005b60405160128152602001610151565b61016d6101d4366004611116565b6103d0565b6101b56103f2565b6101816101ef36600461119c565b6001600160a01b031660009081526033602052604090205490565b60655461021d906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b6101b5610243366004611263565b6103fd565b610144610549565b610181610558565b61016d610266366004611116565b6105d8565b6101b5610279366004611183565b610653565b61016d61028c366004611116565b61065d565b61018161029f36600461119c565b60686020526000908152604090205481565b6101816102bf36600461119c565b61066b565b6101816102d23660046112ec565b610785565b61018160675481565b60665461021d906001600160a01b031681565b60606036805461030290611325565b80601f016020809104026020016040519081016040528092919081815260200182805461032e90611325565b801561037b5780601f106103505761010080835404028352916020019161037b565b820191906000526020600020905b81548152906001019060200180831161035e57829003601f168201915b5050505050905090565b6000336103938185856107b0565b60019150505b92915050565b6000336103ad8582856108d4565b6103b885858561094e565b506001949350505050565b6103cd3382610b04565b50565b6000336103938185856103e38383610785565b6103ed9190611375565b6107b0565b6103fb33610bcd565b565b600054610100900460ff161580801561041d5750600054600160ff909116105b806104375750303b158015610437575060005460ff166001145b61049f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156104c2576000805461ff0019166101001790555b6104cc8585610cd2565b606580546001600160a01b038086166001600160a01b03199283161790925560668054928516929091169190911790558015610542576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b60606037805461030290611325565b6067546066546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c99190611388565b6105d39190611375565b905090565b600033816105e68286610785565b9050838110156106465760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610496565b6103b882868684036107b0565b6103cd3382610d07565b60003361039381858561094e565b600061067660355490565b15806106875750610685610558565b155b1561069457506000919050565b6001600160a01b0382166000908152606860205260408120546106b5610558565b6106bf91906113a1565b905060006106cc60355490565b6001600160a01b0385166000908152603360205260409020546106ef90846113b4565b6106f991906113cb565b6066546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190611388565b90508181101561077d57949350505050565b509392505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166108125760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610496565b6001600160a01b0382166108735760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610496565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006108e08484610785565b90506000198114610948578181101561093b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610496565b61094884848484036107b0565b50505050565b6001600160a01b0383166109b25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610496565b6001600160a01b038216610a145760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610496565b610a1f838383610dce565b6001600160a01b03831660009081526033602052604090205481811015610a975760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610496565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610af79086815260200190565b60405180910390a3610948565b60655460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610b57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7b91906113ed565b50610b868282610e66565b604080516001600160a01b0384168152602081018390527f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd91015b60405180910390a15050565b6000610bd88261066b565b90508060676000828254610bec9190611375565b909155505060665460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6891906113ed565b50610c71610558565b336000908152606860209081526040918290209290925560665481516001600160a01b0386811682529381018590529216917f8ac5b3c2902b21b6bbb4d99ec195e28a242cb6a1777804db10b84d91e2006429910160405180910390a25050565b600054610100900460ff16610cf95760405162461bcd60e51b81526004016104969061140f565b610d038282610fa6565b5050565b6065546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201849052909116906323b872dd906064016020604051808303816000875af1158015610d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8491906113ed565b50610d8f8282610fe6565b604080516001600160a01b0384168152602081018390527febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9101610bc1565b6001600160a01b0383161580610deb57506001600160a01b038216155b610e415760405162461bcd60e51b815260206004820152602160248201527f45524332304469766964656e64733a207472616e736665722064697361626c656044820152601960fa1b6064820152608401610496565b6001600160a01b038316610e5d57610e5882610bcd565b505050565b610e5883610bcd565b6001600160a01b038216610ec65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610496565b610ed282600083610dce565b6001600160a01b03821660009081526033602052604090205481811015610f465760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610496565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff16610fcd5760405162461bcd60e51b81526004016104969061140f565b6036610fd983826114a8565b506037610e5882826114a8565b6001600160a01b03821661103c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610496565b61104860008383610dce565b806035600082825461105a9190611375565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156110e0578581018301518582016040015282016110c4565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146103cd57600080fd5b6000806040838503121561112957600080fd5b823561113481611101565b946020939093013593505050565b60008060006060848603121561115757600080fd5b833561116281611101565b9250602084013561117281611101565b929592945050506040919091013590565b60006020828403121561119557600080fd5b5035919050565b6000602082840312156111ae57600080fd5b81356111b981611101565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126111e757600080fd5b813567ffffffffffffffff80821115611202576112026111c0565b604051601f8301601f19908116603f0116810190828211818310171561122a5761122a6111c0565b8160405283815286602085880101111561124357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561127957600080fd5b843567ffffffffffffffff8082111561129157600080fd5b61129d888389016111d6565b955060208701359150808211156112b357600080fd5b506112c0878288016111d6565b93505060408501356112d181611101565b915060608501356112e181611101565b939692955090935050565b600080604083850312156112ff57600080fd5b823561130a81611101565b9150602083013561131a81611101565b809150509250929050565b600181811c9082168061133957607f821691505b60208210810361135957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103995761039961135f565b60006020828403121561139a57600080fd5b5051919050565b818103818111156103995761039961135f565b80820281158282048414176103995761039961135f565b6000826113e857634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156113ff57600080fd5b815180151581146111b957600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610e5857600081815260208120601f850160051c810160208610156114815750805b601f850160051c820191505b818110156114a05782815560010161148d565b505050505050565b815167ffffffffffffffff8111156114c2576114c26111c0565b6114d6816114d08454611325565b8461145a565b602080601f83116001811461150b57600084156114f35750858301515b600019600386901b1c1916600185901b1785556114a0565b600085815260208120601f198616915b8281101561153a5788860151825594840194600190910190840161151b565b50858210156115585787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220f2c4c5828792e298ff35814064c1bf53add816ea1db86f2727ee41f22dcc4ef764736f6c63430008130033";

type ERC20DividendsV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20DividendsV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20DividendsV1__factory extends ContractFactory {
  constructor(...args: ERC20DividendsV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20DividendsV1> {
    return super.deploy(overrides || {}) as Promise<ERC20DividendsV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20DividendsV1 {
    return super.attach(address) as ERC20DividendsV1;
  }
  connect(signer: Signer): ERC20DividendsV1__factory {
    return super.connect(signer) as ERC20DividendsV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20DividendsV1Interface {
    return new utils.Interface(_abi) as ERC20DividendsV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20DividendsV1 {
    return new Contract(address, _abi, signerOrProvider) as ERC20DividendsV1;
  }
}
