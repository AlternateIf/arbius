/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BaseTokenV1, BaseTokenV1Interface } from "../BaseTokenV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bridgeBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bridgeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2Gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1TokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2Gateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061251a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637ecebe0011610104578063a457c2d7116100a2578063d505accf11610071578063d505accf14610420578063dd62ed3e14610433578063f1127ed814610446578063f2fde38b1461048357600080fd5b8063a457c2d7146103d3578063a9059cbb146103e6578063c2eeeebd146103f9578063c3cda5201461040d57600080fd5b80638e539e8c116100de5780638e539e8c146103915780638fa74a0e146103a457806395d89b41146103b85780639ab24eb0146103c057600080fd5b80637ecebe001461035a5780638c2a993e1461036d5780638da5cb5b1461038057600080fd5b80633a46b1a81161017c5780636fcfff451161014b5780636fcfff45146102ee57806370a0823114610316578063715018a61461033f57806374f4f5471461034757600080fd5b80633a46b1a81461026f578063485cc95514610282578063587cde1e146102975780635c19a95c146102db57600080fd5b806323b872dd116101b857806323b872dd14610232578063313ce567146102455780633644e51514610254578063395093511461025c57600080fd5b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e7610496565b6040516101f49190612057565b60405180910390f35b61021061020b3660046120c1565b610528565b60405190151581526020016101f4565b6035545b6040519081526020016101f4565b6102106102403660046120eb565b610542565b604051601281526020016101f4565b610224610566565b61021061026a3660046120c1565b610575565b61022461027d3660046120c1565b610597565b610295610290366004612127565b610616565b005b6102c36102a536600461215a565b6001600160a01b03908116600090815260cc60205260409020541690565b6040516001600160a01b0390911681526020016101f4565b6102956102e936600461215a565b6107cd565b6103016102fc36600461215a565b6107da565b60405163ffffffff90911681526020016101f4565b61022461032436600461215a565b6001600160a01b031660009081526033602052604090205490565b6102956107fc565b6102956103553660046120c1565b610810565b61022461036836600461215a565b610867565b61029561037b3660046120c1565b610885565b60fe546001600160a01b03166102c3565b61022461039f366004612175565b6108d8565b610130546102c3906001600160a01b031681565b6101e7610934565b6102246103ce36600461215a565b610943565b6102106103e13660046120c1565b6109ca565b6102106103f43660046120c1565b610a45565b610131546102c3906001600160a01b031681565b61029561041b36600461219f565b610a53565b61029561042e3660046121f7565b610b89565b610224610441366004612127565b610ced565b610459610454366004612261565b610d18565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101f4565b61029561049136600461215a565b610d9c565b6060603680546104a5906122a1565b80601f01602080910402602001604051908101604052809291908181526020018280546104d1906122a1565b801561051e5780601f106104f35761010080835404028352916020019161051e565b820191906000526020600020905b81548152906001019060200180831161050157829003601f168201915b5050505050905090565b600033610536818585610dad565b60019150505b92915050565b600033610550858285610ed1565b61055b858585610f4b565b506001949350505050565b60006105706110fc565b905090565b6000336105368185856105888383610ced565b61059291906122eb565b610dad565b60004382106105ed5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b038316600090815260cd6020526040902061060f9083611177565b9392505050565b600054610100900460ff16158080156106365750600054600160ff909116105b806106505750303b158015610650575060005460ff166001145b6106b35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105e4565b6000805460ff1916600117905580156106d6576000805461ff0019166101001790555b6107196040518060400160405280600681526020016541726269757360d01b8152506040518060400160405280600381526020016211135360ea1b81525061126e565b6107406040518060400160405280600681526020016541726269757360d01b81525061129f565b6107486112e9565b610750611310565b61013080546001600160a01b038086166001600160a01b03199283161790925561013180549285169290911691909117905580156107c8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6107d7338261133f565b50565b6001600160a01b038116600090815260cd602052604081205461053c906113b9565b610804611422565b61080e600061147c565b565b610130546001600160a01b031633146108595760405162461bcd60e51b815260206004820152600b60248201526a4e4f545f4741544557415960a81b60448201526064016105e4565b61086382826114ce565b5050565b6001600160a01b03811660009081526099602052604081205461053c565b610130546001600160a01b031633146108ce5760405162461bcd60e51b815260206004820152600b60248201526a4e4f545f4741544557415960a81b60448201526064016105e4565b61086382826114d8565b60004382106109295760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016105e4565b61053c60ce83611177565b6060603780546104a5906122a1565b6001600160a01b038116600090815260cd602052604081205480156109b7576001600160a01b038316600090815260cd602052604090206109856001836122fe565b8154811061099557610995612311565b60009182526020909120015464010000000090046001600160e01b03166109ba565b60005b6001600160e01b03169392505050565b600033816109d88286610ced565b905083811015610a385760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105e4565b61055b8286868403610dad565b600033610536818585610f4b565b83421115610aa35760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016105e4565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610b1d90610b159060a001604051602081830303815290604052805190602001206114e2565b858585611530565b9050610b2881611558565b8614610b765760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016105e4565b610b80818861133f565b50505050505050565b83421115610bd95760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105e4565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610c088c611558565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610c63826114e2565b90506000610c7382878787611530565b9050896001600160a01b0316816001600160a01b031614610cd65760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105e4565b610ce18a8a8a610dad565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b038316600090815260cd60205260409020805463ffffffff8416908110610d5c57610d5c612311565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610da4611422565b6107d781611580565b6001600160a01b038316610e0f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105e4565b6001600160a01b038216610e705760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105e4565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610edd8484610ced565b90506000198114610f455781811015610f385760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105e4565b610f458484848403610dad565b50505050565b6001600160a01b038316610faf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105e4565b6001600160a01b0382166110115760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105e4565b6001600160a01b038316600090815260336020526040902054818110156110895760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105e4565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906110e99086815260200190565b60405180910390a3610f458484846115f6565b60006105707f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61112b60655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b8154600090818160058111156111d157600061119284611601565b61119c90856122fe565b600088815260209020909150869082015463ffffffff1611156111c1578091506111cf565b6111cc8160016122eb565b92505b505b8082101561121e5760006111e583836116e9565b600088815260209020909150869082015463ffffffff16111561120a57809150611218565b6112158160016122eb565b92505b506111d1565b801561125857611241866112336001846122fe565b600091825260209091200190565b5464010000000090046001600160e01b031661125b565b60005b6001600160e01b03169695505050505050565b600054610100900460ff166112955760405162461bcd60e51b81526004016105e490612327565b6108638282611704565b600054610100900460ff166112c65760405162461bcd60e51b81526004016105e490612327565b6107d781604051806040016040528060018152602001603160f81b815250611744565b600054610100900460ff1661080e5760405162461bcd60e51b81526004016105e490612327565b600054610100900460ff166113375760405162461bcd60e51b81526004016105e490612327565b61080e611785565b6001600160a01b03828116600081815260cc6020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610f458284836117b5565b600063ffffffff82111561141e5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016105e4565b5090565b60fe546001600160a01b0316331461080e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e4565b60fe80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61086382826118f2565b610863828261190a565b600061053c6114ef6110fc565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061154187878787611994565b9150915061154e81611a58565b5095945050505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b611588611422565b6001600160a01b0381166115ed5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e4565b6107d78161147c565b6107c8838383611ba2565b60008160000361161357506000919050565b6000600161162084611bd4565b901c6001901b9050600181848161163957611639612372565b048201901c9050600181848161165157611651612372565b048201901c9050600181848161166957611669612372565b048201901c9050600181848161168157611681612372565b048201901c9050600181848161169957611699612372565b048201901c905060018184816116b1576116b1612372565b048201901c905060018184816116c9576116c9612372565b048201901c905061060f818285816116e3576116e3612372565b04611c68565b60006116f86002848418612388565b61060f908484166122eb565b600054610100900460ff1661172b5760405162461bcd60e51b81526004016105e490612327565b6036611737838261240e565b5060376107c8828261240e565b600054610100900460ff1661176b5760405162461bcd60e51b81526004016105e490612327565b815160209283012081519190920120606591909155606655565b600054610100900460ff166117ac5760405162461bcd60e51b81526004016105e490612327565b61080e3361147c565b816001600160a01b0316836001600160a01b0316141580156117d75750600081115b156107c8576001600160a01b03831615611865576001600160a01b038316600090815260cd60205260408120819061181290611c7e85611c8a565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161185a929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156107c8576001600160a01b038216600090815260cd60205260408120819061189b90611dde85611c8a565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516118e3929190918252602082015260400190565b60405180910390a25050505050565b6118fc8282611dea565b610f4560ce611c7e83611c8a565b6119148282611f25565b6035546001600160e01b0310156119865760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016105e4565b610f4560ce611dde83611c8a565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156119cb5750600090506003611a4f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a1f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a4857600060019250925050611a4f565b9150600090505b94509492505050565b6000816004811115611a6c57611a6c6124ce565b03611a745750565b6001816004811115611a8857611a886124ce565b03611ad55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105e4565b6002816004811115611ae957611ae96124ce565b03611b365760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105e4565b6003816004811115611b4a57611b4a6124ce565b036107d75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105e4565b6001600160a01b03838116600090815260cc60205260408082205485841683529120546107c8929182169116836117b5565b600080608083901c15611be957608092831c92015b604083901c15611bfb57604092831c92015b602083901c15611c0d57602092831c92015b601083901c15611c1f57601092831c92015b600883901c15611c3157600892831c92015b600483901c15611c4357600492831c92015b600283901c15611c5557600292831c92015b600183901c1561053c5760010192915050565b6000818310611c77578161060f565b5090919050565b600061060f82846122fe565b82546000908190818115611cd757611ca7876112336001856122fe565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152611cec565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350611d0c84868863ffffffff16565b9250600082118015611d245750805163ffffffff1643145b15611d6957611d3283611fee565b611d41886112336001866122fe565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055611dd4565b866040518060400160405280611d7e436113b9565b63ffffffff168152602001611d9286611fee565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b600061060f82846122eb565b6001600160a01b038216611e4a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105e4565b6001600160a01b03821660009081526033602052604090205481811015611ebe5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105e4565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107c8836000846115f6565b6001600160a01b038216611f7b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105e4565b8060356000828254611f8d91906122eb565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610863600083836115f6565b60006001600160e01b0382111561141e5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016105e4565b600060208083528351808285015260005b8181101561208457858101830151858201604001528201612068565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146120bc57600080fd5b919050565b600080604083850312156120d457600080fd5b6120dd836120a5565b946020939093013593505050565b60008060006060848603121561210057600080fd5b612109846120a5565b9250612117602085016120a5565b9150604084013590509250925092565b6000806040838503121561213a57600080fd5b612143836120a5565b9150612151602084016120a5565b90509250929050565b60006020828403121561216c57600080fd5b61060f826120a5565b60006020828403121561218757600080fd5b5035919050565b803560ff811681146120bc57600080fd5b60008060008060008060c087890312156121b857600080fd5b6121c1876120a5565b955060208701359450604087013593506121dd6060880161218e565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561221257600080fd5b61221b886120a5565b9650612229602089016120a5565b955060408801359450606088013593506122456080890161218e565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561227457600080fd5b61227d836120a5565b9150602083013563ffffffff8116811461229657600080fd5b809150509250929050565b600181811c908216806122b557607f821691505b60208210810361157a57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561053c5761053c6122d5565b8181038181111561053c5761053c6122d5565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826123a557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b601f8211156107c857600081815260208120601f850160051c810160208610156123e75750805b601f850160051c820191505b81811015612406578281556001016123f3565b505050505050565b815167ffffffffffffffff811115612428576124286123aa565b61243c8161243684546122a1565b846123c0565b602080601f83116001811461247157600084156124595750858301515b600019600386901b1c1916600185901b178555612406565b600085815260208120601f198616915b828110156124a057888601518255948401946001909101908401612481565b50858210156124be5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfea26469706673582212202f0416599cfaaf4c94a8038d9de916f35f4c69c90b1981f4b025a5d05a62d38a64736f6c63430008130033";

type BaseTokenV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseTokenV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseTokenV1__factory extends ContractFactory {
  constructor(...args: BaseTokenV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseTokenV1> {
    return super.deploy(overrides || {}) as Promise<BaseTokenV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BaseTokenV1 {
    return super.attach(address) as BaseTokenV1;
  }
  connect(signer: Signer): BaseTokenV1__factory {
    return super.connect(signer) as BaseTokenV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseTokenV1Interface {
    return new utils.Interface(_abi) as BaseTokenV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseTokenV1 {
    return new Contract(address, _abi, signerOrProvider) as BaseTokenV1;
  }
}
