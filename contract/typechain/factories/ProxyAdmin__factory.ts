/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ProxyAdmin, ProxyAdminInterface } from "../ProxyAdmin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61046d8061007e6000396000f3fe60806040526004361061004a5760003560e01c8063132d807e1461004f57806313b7adcc14610071578063715018a6146100845780638da5cb5b14610099578063f2fde38b146100c5575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610314565b6100e5565b005b61006f61007f366004610347565b61014c565b34801561009057600080fd5b5061006f6101bc565b3480156100a557600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100d157600080fd5b5061006f6100e03660046103d5565b6101d0565b6100ed61024e565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe690602401600060405180830381600087803b15801561013057600080fd5b505af1158015610144573d6000803e3d6000fd5b505050505050565b61015461024e565b60405163278f794360e11b81526001600160a01b03851690634f1ef28690610184908690869086906004016103f7565b600060405180830381600087803b15801561019e57600080fd5b505af11580156101b2573d6000803e3d6000fd5b5050505050505050565b6101c461024e565b6101ce60006102a8565b565b6101d861024e565b6001600160a01b0381166102425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61024b816102a8565b50565b6000546001600160a01b031633146101ce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610239565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461030f57600080fd5b919050565b6000806040838503121561032757600080fd5b610330836102f8565b915061033e602084016102f8565b90509250929050565b6000806000806060858703121561035d57600080fd5b610366856102f8565b9350610374602086016102f8565b9250604085013567ffffffffffffffff8082111561039157600080fd5b818701915087601f8301126103a557600080fd5b8135818111156103b457600080fd5b8860208285010111156103c657600080fd5b95989497505060200194505050565b6000602082840312156103e757600080fd5b6103f0826102f8565b9392505050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f191601019291505056fea264697066735822122005d2d7045e7ca4540802c1ff41d2e125d8561e6c58e8673e2cfc793fd5baa13564736f6c63430008130033";

type ProxyAdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyAdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyAdmin__factory extends ContractFactory {
  constructor(...args: ProxyAdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProxyAdmin> {
    return super.deploy(overrides || {}) as Promise<ProxyAdmin>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProxyAdmin {
    return super.attach(address) as ProxyAdmin;
  }
  connect(signer: Signer): ProxyAdmin__factory {
    return super.connect(signer) as ProxyAdmin__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyAdminInterface {
    return new utils.Interface(_abi) as ProxyAdminInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyAdmin {
    return new Contract(address, _abi, signerOrProvider) as ProxyAdmin;
  }
}
