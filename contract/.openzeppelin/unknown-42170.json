{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xF392fEA506efB6ED445253594DC81a0CB7cD3562",
    "txHash": "0xc67578ae58e8b0489128be9a0ee3954da6dbe2b096059dd07fe291677b3b5339"
  },
  "proxies": [
    {
      "address": "0x8AFE4055Ebc86Bd2AFB3940c0095C9aca511d852",
      "txHash": "0xda9f588ffcd8e600821cb4d541094e2b2cae1ffdf6899487a1c927b2b7dbd5d8",
      "kind": "transparent"
    },
    {
      "address": "0x3BF6050327Fa280Ee1B5F3e8Fd5EA2EfE8A6472a",
      "txHash": "0xff46bdd52ac2b872d8a7fc7a129cb4240380c5c737ee3a6416d910930c992364",
      "kind": "transparent"
    }
  ],
  "impls": {
    "741a08a011f0f5d73daa229ff6b0a4551badfbb686f508ad3dcf4e0cbcc2e670": {
      "address": "0xf318DD1a7D60d9aE07388aE8793D281d5641Ac9e",
      "txHash": "0xacec27a5e259fa924d23f6a2d2d82242e651dd4207a8f55aa63e2186a2547dfd",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(Counter)2669_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "154",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:37"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1484_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:38"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_struct(Checkpoint)1484_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:302"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "l2Gateway",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "BaseTokenV1",
            "src": "contracts/BaseTokenV1.sol:18"
          },
          {
            "label": "l1Address",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "BaseTokenV1",
            "src": "contracts/BaseTokenV1.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)48_storage",
            "contract": "BaseTokenV1",
            "src": "contracts/BaseTokenV1.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)1484_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1484_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2669_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)1484_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2669_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f3337f8ad2115b32d4413fffa3b3902905c6422f54525d3d270281d5cc4b209c": {
      "address": "0x9b51Ef044d3486A1fB0A2D55A6e0CeeAdd323E66",
      "txHash": "0xc5bf8fd9e5963081cf3213dc7710aed42a2c332e5de22b608ff9c956ec4f76a4",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IBaseToken)36208",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:70"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:72"
          },
          {
            "label": "pauser",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:74"
          },
          {
            "label": "paused",
            "offset": 20,
            "slot": "103",
            "type": "t_bool",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:76"
          },
          {
            "label": "accruedFees",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:78"
          },
          {
            "label": "prevhash",
            "offset": 0,
            "slot": "105",
            "type": "t_bytes32",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:80"
          },
          {
            "label": "startBlockTime",
            "offset": 0,
            "slot": "106",
            "type": "t_uint64",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:82"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:84"
          },
          {
            "label": "validatorMinimumPercentage",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:86"
          },
          {
            "label": "slashAmountPercentage",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:88"
          },
          {
            "label": "solutionFeePercentage",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:90"
          },
          {
            "label": "retractionFeePercentage",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:92"
          },
          {
            "label": "treasuryRewardPercentage",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:94"
          },
          {
            "label": "minClaimSolutionTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:96"
          },
          {
            "label": "minRetractionWaitTime",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:98"
          },
          {
            "label": "minContestationVotePeriodTime",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:100"
          },
          {
            "label": "maxContestationValidatorStakeSince",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:101"
          },
          {
            "label": "exitValidatorMinUnlockTime",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:103"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(Model)29681_storage)",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:106"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_struct(Validator)29688_storage)",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:108"
          },
          {
            "label": "pendingValidatorWithdrawRequestsCount",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:111"
          },
          {
            "label": "pendingValidatorWithdrawRequests",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)29693_storage))",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:114"
          },
          {
            "label": "validatorWithdrawPendingAmount",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:119"
          },
          {
            "label": "tasks",
            "offset": 0,
            "slot": "123",
            "type": "t_mapping(t_bytes32,t_struct(Task)29706_storage)",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:122"
          },
          {
            "label": "commitments",
            "offset": 0,
            "slot": "124",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:126"
          },
          {
            "label": "solutions",
            "offset": 0,
            "slot": "125",
            "type": "t_mapping(t_bytes32,t_struct(Solution)29715_storage)",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:129"
          },
          {
            "label": "contestations",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_bytes32,t_struct(Contestation)29724_storage)",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:132"
          },
          {
            "label": "contestationVoted",
            "offset": 0,
            "slot": "127",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:134"
          },
          {
            "label": "contestationVotedIndex",
            "offset": 0,
            "slot": "128",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:135"
          },
          {
            "label": "contestationVoteYeas",
            "offset": 0,
            "slot": "129",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:136"
          },
          {
            "label": "contestationVoteNays",
            "offset": 0,
            "slot": "130",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:137"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "131",
            "type": "t_array(t_uint256)48_storage",
            "contract": "V2_EngineV1",
            "src": "contracts/V2_EngineV1.sol:139"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IBaseToken)36208": {
            "label": "contract IBaseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)29693_storage))": {
            "label": "mapping(address => mapping(uint256 => struct PendingValidatorWithdrawRequest))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Validator)29688_storage)": {
            "label": "mapping(address => struct Validator)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Contestation)29724_storage)": {
            "label": "mapping(bytes32 => struct Contestation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Model)29681_storage)": {
            "label": "mapping(bytes32 => struct Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Solution)29715_storage)": {
            "label": "mapping(bytes32 => struct Solution)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Task)29706_storage)": {
            "label": "mapping(bytes32 => struct Task)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)29693_storage)": {
            "label": "mapping(uint256 => struct PendingValidatorWithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(Contestation)29724_storage": {
            "label": "struct Contestation",
            "members": [
              {
                "label": "validator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "finish_start_index",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "slashAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Model)29681_storage": {
            "label": "struct Model",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PendingValidatorWithdrawRequest)29693_storage": {
            "label": "struct PendingValidatorWithdrawRequest",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Solution)29715_storage": {
            "label": "struct Solution",
            "members": [
              {
                "label": "validator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Task)29706_storage": {
            "label": "struct Task",
            "members": [
              {
                "label": "model",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "version",
                "type": "t_uint8",
                "offset": 28,
                "slot": "2"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Validator)29688_storage": {
            "label": "struct Validator",
            "members": [
              {
                "label": "staked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "since",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "12089a85f80dae33ce5fe29b64b42c3a327a5fc1b597508f20d3a681561f1a00": {
      "address": "0x3bA380Bf035a02Cb0a4A5001c73b831de3e7033E",
      "txHash": "0x2eb7e80b009bf5ccce0ebeb8611de925ca2dbe1bc88335d2c1a4e6ab24ca1d3f",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IBaseToken)36208",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:70"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:72"
          },
          {
            "label": "pauser",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:74"
          },
          {
            "label": "paused",
            "offset": 20,
            "slot": "103",
            "type": "t_bool",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:76"
          },
          {
            "label": "accruedFees",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:78"
          },
          {
            "label": "prevhash",
            "offset": 0,
            "slot": "105",
            "type": "t_bytes32",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:80"
          },
          {
            "label": "startBlockTime",
            "offset": 0,
            "slot": "106",
            "type": "t_uint64",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:82"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:84"
          },
          {
            "label": "validatorMinimumPercentage",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:86"
          },
          {
            "label": "slashAmountPercentage",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:88"
          },
          {
            "label": "solutionFeePercentage",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:90"
          },
          {
            "label": "retractionFeePercentage",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:92"
          },
          {
            "label": "treasuryRewardPercentage",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:94"
          },
          {
            "label": "minClaimSolutionTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:96"
          },
          {
            "label": "minRetractionWaitTime",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:98"
          },
          {
            "label": "minContestationVotePeriodTime",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:100"
          },
          {
            "label": "maxContestationValidatorStakeSince",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:101"
          },
          {
            "label": "exitValidatorMinUnlockTime",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:103"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(Model)32522_storage)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:106"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_struct(Validator)32529_storage)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:108"
          },
          {
            "label": "pendingValidatorWithdrawRequestsCount",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:111"
          },
          {
            "label": "pendingValidatorWithdrawRequests",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)32534_storage))",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:114"
          },
          {
            "label": "validatorWithdrawPendingAmount",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:119"
          },
          {
            "label": "tasks",
            "offset": 0,
            "slot": "123",
            "type": "t_mapping(t_bytes32,t_struct(Task)32547_storage)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:122"
          },
          {
            "label": "commitments",
            "offset": 0,
            "slot": "124",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:126"
          },
          {
            "label": "solutions",
            "offset": 0,
            "slot": "125",
            "type": "t_mapping(t_bytes32,t_struct(Solution)32556_storage)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:129"
          },
          {
            "label": "contestations",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_bytes32,t_struct(Contestation)32565_storage)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:132"
          },
          {
            "label": "contestationVoted",
            "offset": 0,
            "slot": "127",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:134"
          },
          {
            "label": "contestationVotedIndex",
            "offset": 0,
            "slot": "128",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:135"
          },
          {
            "label": "contestationVoteYeas",
            "offset": 0,
            "slot": "129",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:136"
          },
          {
            "label": "contestationVoteNays",
            "offset": 0,
            "slot": "130",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:137"
          },
          {
            "label": "solutionsStake",
            "offset": 0,
            "slot": "131",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:139"
          },
          {
            "label": "solutionsStakeAmount",
            "offset": 0,
            "slot": "132",
            "type": "t_uint256",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:140"
          },
          {
            "label": "lastContestationLossTime",
            "offset": 0,
            "slot": "133",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:141"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "134",
            "type": "t_array(t_uint256)45_storage",
            "contract": "V2_EngineV2",
            "src": "contracts/V2_EngineV2.sol:143"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IBaseToken)36208": {
            "label": "contract IBaseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)32534_storage))": {
            "label": "mapping(address => mapping(uint256 => struct PendingValidatorWithdrawRequest))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Validator)32529_storage)": {
            "label": "mapping(address => struct Validator)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Contestation)32565_storage)": {
            "label": "mapping(bytes32 => struct Contestation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Model)32522_storage)": {
            "label": "mapping(bytes32 => struct Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Solution)32556_storage)": {
            "label": "mapping(bytes32 => struct Solution)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Task)32547_storage)": {
            "label": "mapping(bytes32 => struct Task)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)32534_storage)": {
            "label": "mapping(uint256 => struct PendingValidatorWithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(Contestation)32565_storage": {
            "label": "struct Contestation",
            "members": [
              {
                "label": "validator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "finish_start_index",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "slashAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Model)32522_storage": {
            "label": "struct Model",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PendingValidatorWithdrawRequest)32534_storage": {
            "label": "struct PendingValidatorWithdrawRequest",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Solution)32556_storage": {
            "label": "struct Solution",
            "members": [
              {
                "label": "validator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Task)32547_storage": {
            "label": "struct Task",
            "members": [
              {
                "label": "model",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "version",
                "type": "t_uint8",
                "offset": 28,
                "slot": "2"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Validator)32529_storage": {
            "label": "struct Validator",
            "members": [
              {
                "label": "staked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "since",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
